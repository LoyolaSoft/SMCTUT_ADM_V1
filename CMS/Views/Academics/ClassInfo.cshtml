@model CMS.ViewModel.Model.ClassModel

@{
    ViewBag.Title = "ClassInfo";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="content" id="content">
        <ol class="breadcrumb pull-right">
            <li><a href="javascript:;">Home</a></li>
            <li><a href="@Url.Action("ListClassInfo","Academics")">List Class</a></li>
            <li class="active">Add Class</li>
        </ol>
        <h2 class="page-header">Class Details</h2>
        <div class="panel">
            <div class="panel-heading bg-primary">
                <div class="panel-heading-btn">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-danger" data-click="panel-remove"><i class="fa fa-times"></i></a>
                </div>
                <h4 class="panel-title">Add Class</h4>
            </div>
            <div class="panel-body">
                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.CLASS_NAME, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.CLASS_NAME, new { htmlAttributes = new { @class = "form-control input-sm",placeholder="Enter Class Name"} })
                                @Html.ValidationMessageFor(model => model.CLASS_NAME, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CLASS_CODE, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.CLASS_CODE, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Class Code" } })
                                @Html.ValidationMessageFor(model => model.CLASS_CODE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CLASS_DESCRIPTION, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.CLASS_DESCRIPTION, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Class Description" } })
                                @Html.ValidationMessageFor(model => model.CLASS_DESCRIPTION, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DEPARTMENT, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.DEPARTMENT, Model.DEPARTMENT, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.DEPARTMENT, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CLASS_TYPE, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.CLASS_TYPE, Model.CLASS_TYPE, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.CLASS_TYPE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CLASS_YEAR, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.CLASS_YEAR, Model.CLASS_YEAR, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.CLASS_YEAR, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PROGRAMME, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.PROGRAMME, Model.PROGRAMME, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.PROGRAMME, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LANGUAGE, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.LANGUAGE, Model.LANGUAGE, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.LANGUAGE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CLASS_LEVEL, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.CLASS_LEVEL, Model.CLASS_LEVEL, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.CLASS_LEVEL, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CLASS_ORDER, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.CLASS_ORDER, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Class Order" } })
                                @Html.ValidationMessageFor(model => model.CLASS_ORDER, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SHIFT, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.SHIFT, Model.SHIFT, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.SHIFT, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.COURSE_ID, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.COURSE_ID, Model.COURSE_ID, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.COURSE_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IS_CHOICE, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IS_CHOICE)
                                    @Html.ValidationMessageFor(model => model.IS_CHOICE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group pull-right">
                            <div class="col-md-12 pull-right">

                                <a id="btnSubmit" value="Submit" class="btn btn-primary">Submit</a>
                                <a id="btnCancel" value="Submit" class="btn btn-danger" href="@Url.Action("ListClassInfo","Academics")">Cancel</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section scripts{
    <script>
        $('#btnSubmit').on("click", function () {
            var ClassCode = $('#CLASS_CODE').val();
            var ClassName = $('#CLASS_NAME').val();
            var ClassDescription = $('#CLASS_DESCRIPTION').val();
            var Department = $('#DEPARTMENT').val();
            var ClassTyppe = $('#CLASS_TYPE').val();
            var ClassYear = $('#CLASS_YEAR').val();
            var Programme = $('#PROGRAMME').val();
            var Language = $('#LANGUAGE').val();
            var classLevel = $('#CLASS_LEVEL').val();
            var ClassOrder = $('#CLASS_ORDER').val();
            var Shift = $('#SHIFT').val();
            var CourseId = $('#COURSE_ID').val();
            var IsChoice = $('#IS_CHOICE').val();
            var JsonData;
            if ($('#IS_CHOICE').is(":checked")) {
                IsChoice = 1;
            }
            else {
                IsChoice = 0;
            }
            JsonData = '{"CLASS_CODE":"' + ClassCode + '","CLASS_NAME":"' + ClassName + '","CLASS_DESCRIPTION":"' + ClassDescription + '","DEPARTMENT":"' + Department + '","CLASS_TYPE":"' + ClassTyppe + '","CLASS_YEAR":"' + ClassYear + '","PROGRAMME":"' + Programme + '","LANGUAGE":"' + Language + '","CLASS_LEVEL":"' + classLevel + '","CLASS_ORDER":"' + ClassOrder + '","SHIFT":"' + Shift + '","COURSE_ID":"' + CourseId + '","IS_CHOICE":"' + IsChoice + '"}';
            $.ajax({
                url: "@Url.Action("InsertClassInfo", "Academics")",
                method: "POST",
                datatype: "html",
                data: { sJsonClass: JsonData },
                success: function (data) {
                    alert(data);
                }, error: function (error) {
                    alert('Record not saved try again ..!');
                }
            });
        });
    </script>
}