@model CMS.ViewModel.Model.CourseRootModel

@{
    ViewBag.Title = "CourseRootInfo";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="content" id="content">
        <ol class="breadcrumb pull-right">
            <li><a href="javascript:;">Home</a></li>
            <li><a href="@Url.Action("ListCourseInfo","Academics")">List Course</a></li>
            <li class="active">Edit Course</li>
        </ol>
        <h2 class="page-header">Course Details</h2>
        <div class="panel">
            <div class="panel-heading bg-primary">
                <div class="panel-heading-btn">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-danger" data-click="panel-remove"><i class="fa fa-times"></i></a>
                </div>
                <h4 class="panel-title">Edit Course</h4>
            </div>
            <div class="panel-body">
                <div class="form-horizontal">
                    <div class="col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.COURSE_CODE, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.COURSE_CODE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtCoursecode", placeholder = "Enter Course Code" } })
                                @Html.ValidationMessageFor(model => model.COURSE_CODE, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.COURSE_TITLE, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.COURSE_TITLE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtCoursetitle", placeholder = "Enter Course Title" } })
                                @Html.ValidationMessageFor(model => model.COURSE_TITLE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.SEMESTER, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.SEMESTER, Model.SEMESTER, "-- Select --", new { @class = "drop-down form-control input-sm", id = "ddlSemester" })
                                    @Html.ValidationMessageFor(model => model.SEMESTER, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.DEPARTMENT, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.DEPARTMENT, Model.DEPARTMENT, "-- Select --", new { @class = "drop-down form-control input-sm", id = "ddlDepartment" })
                                @Html.ValidationMessageFor(model => model.DEPARTMENT, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.YEAR_FROM, htmlAttributes: new { @class = "control-label col-md-3 " })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.YEAR_FROM, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtYearfrom", placeholder = "Enter Year From", MaxLength = "4" } })
                                @Html.ValidationMessageFor(model => model.YEAR_FROM, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.YEAR_TO, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.YEAR_TO, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtYearto", placeholder = "Enter Year To", MaxLength = "4" } })
                                @Html.ValidationMessageFor(model => model.YEAR_TO, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.YEAR, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.YEAR, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtYear", placeholder = "Enter Year", MaxLength = "4" } })
                                @Html.ValidationMessageFor(model => model.YEAR, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.SEMESTER_FROM, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.SEMESTER_FROM, Model.SEMESTER_FROM, "-- Select --", new { @class = "drop-down form-control input-sm", id = "ddlSemesterfrom" })
                                    @Html.ValidationMessageFor(model => model.SEMESTER_FROM, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SEMESTER_TO, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.SEMESTER_TO, Model.SEMESTER_TO, "-- Select --", new { @class = "drop-down form-control input-sm", id = "ddlSemesterto" })
                                    @Html.ValidationMessageFor(model => model.SEMESTER_TO, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.PART, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.PART, Model.PART, "-- Select --", new { @class = "drop-down form-control input-sm", id = "ddlPart" })
                                @Html.ValidationMessageFor(model => model.PART, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.COURSE_TYPE, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.COURSE_TYPE, Model.COURSE_TYPE, "-- Select --", new { @class = "drop-down form-control input-sm", id = "ddlCoursetype" })
                                @Html.ValidationMessageFor(model => model.COURSE_TYPE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.HRS_PER_WEEK, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.HRS_PER_WEEK, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtHrsperweek", placeholder = "Enter Hrs Per Week" } })
                                @Html.ValidationMessageFor(model => model.HRS_PER_WEEK, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CREDITS, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.CREDITS, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtCredits", placeholder = "Enter Credits" } })
                                @Html.ValidationMessageFor(model => model.CREDITS, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.OPTION_NAME, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.OPTION_NAME, Model.OPTION_NAME, "-- Select --", new { @class = "drop-down form-control input-sm", id = "ddlOptionname" })
                                    @Html.ValidationMessageFor(model => model.OPTION_NAME, "", new { @class = "text-danger" })
                                </div>
                            </div>*@
                    </div>
                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.PAPER_CODE, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.PAPER_CODE, Model.PAPER_CODE, "-- Select --", new { @class = "drop-down form-control input-sm", id = "ddlPapercode" })
                                @Html.ValidationMessageFor(model => model.PAPER_CODE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.COURSE_TITLE, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.COURSE_TITLE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtCoursetitle", placeholder = "Enter Course Title" } })
                                    @Html.ValidationMessageFor(model => model.COURSE_TITLE, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.COURSE_CODE, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.COURSE_CODE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtCoursecode",placeholder = "Enter Course Code" } })
                                    @Html.ValidationMessageFor(model => model.COURSE_CODE, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.SEMESTER, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.SEMESTER, Model.SEMESTER, "-- Select --", new { @class = "drop-down form-control input-sm", id = "ddlSemester" })
                                @Html.ValidationMessageFor(model => model.SEMESTER, "", new { @class = "text-danger" })
                            </div>
                        </div>





                        <div class="form-group">
                            @Html.LabelFor(model => model.COURSE_ORDER, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.COURSE_ORDER, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtCourseorder", placeholder = "Enter Course Order" } })
                                @Html.ValidationMessageFor(model => model.COURSE_ORDER, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SUBJECTS, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.SUBJECTS, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtSubjects", placeholder = "Enter Subjects" } })
                                @Html.ValidationMessageFor(model => model.SUBJECTS, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.UGC_COURSE_TYPE, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.UGC_COURSE_TYPE, Model.UGC_COURSE_TYPE, "-- Select --", new { @class = "drop-down form-control input-sm", id = "ddlUGCCoursetype" })
                                @Html.ValidationMessageFor(model => model.UGC_COURSE_TYPE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PAPER_TYPE, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.PAPER_TYPE, Model.PAPER_TYPE, "-- Select --", new { @class = "drop-down form-control input-sm", id = "ddlPaperType" })
                                @Html.ValidationMessageFor(model => model.PAPER_TYPE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SUBJECT_TYPE, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.SUBJECT_TYPE, Model.SUBJECT_TYPE, "-- Select --", new { @class = "drop-down form-control input-sm", id = "ddlSubjectType" })
                                @Html.ValidationMessageFor(model => model.SUBJECT_TYPE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Is NME", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.CheckBox("IS_NME_SUBJECT", Model.IS_NME_SUBJECT, new { @class = "input-sm" })

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Is Allied", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.CheckBox("IS_ALLIED_SUBJECT", Model.IS_ALLIED_SUBJECT, new { @class = "input-sm" })

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Is Compulsory Subject", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.CheckBox("IS_COMPULSORY_SUBJECT", Model.IS_COMPULSORY_SUBJECT, new { @class = "input-sm" })

                            </div>
                        </div>


                        <div class="form-group pull-right">
                            <div class="col-md-12 pull-right">

                                <a id="btnSubmit" value="Submit" class="btn btn-primary">Submit</a>
                                <a id="btnCancel" value="Submit" class="btn btn-danger" href="@Url.Action("ListCourseInfo","Academics")">Cancel</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section scripts{
    <script src="~/Content/assets/plugins/flot/jquery.flot.min.js"></script>
    
    <script>
        $("#btnSubmit").on("click", function () {
            var Department = $("#ddlDepartment").val();
            var YearFrom = $("#txtYearfrom").val();
            var YearTo = $("#txtYearto").val();
            var Year = $("#txtYear").val();
            //var SemesterFrom = $("#ddlSemesterfrom").val();
            //var SemesterTo = $("#ddlSemesterto").val();
            var Part = $("#ddlPart").val();
            var CourseType = $("#ddlCoursetype").val();
            var HrsPerWeek = $("#txtHrsperweek").val();
            var Credits = $("#txtCredits").val();
            //var OptionName = $("#ddlOptionname").val();
            var PaperCode = $("#ddlPapercode").val();
            var CourseTitle = $("#txtCoursetitle").val();
            var CourseCode = $("#txtCoursecode").val();
            var Semester = $("#ddlSemester").val();
            var IsNME = $("#IS_NME_SUBJECT").val();
            var IsAllied = $("#IS_ALLIED_SUBJECT").val();
            var CourseOrder = $("#txtCourseorder").val();
            var Subjects = $("#txtSubjects").val();
            var IsCompulsory = $("#IS_COMPULSORY_SUBJECT").val();
            var UGCCourseType = $("#ddlUGCCoursetype").val();
            var PaperType = $("#ddlPaperType").val();
            var SubjectType = $("#ddlSubjectType").val();
            var JsonData;
            //var NMEchecked;
            //var Alliedchecked;
            //var Compulsorychecked;
            if ($('#IS_NME_SUBJECT').is(":checked")) {
                IsNME = 1;
            }
            else {
                IsNME = 0;
            }
            if ($('#IS_ALLIED_SUBJECT').is(":checked")) {
                IsAllied = 1;
            }
            else {
                IsAllied = 0;
            }
            if ($('#IS_COMPULSORY_SUBJECT').is(":checked")) {
                IsCompulsory = 1;
            }
            else {
                IsCompulsory = 0;
            }
            
            if (JsonData == null) {

                JsonData = '{"DEPARTMENT":"' + Department + '","YEAR_FROM":"' + YearFrom + '","YEAR_TO":"' + YearTo + '","YEAR":"' + Year + '","PART":"' + Part + '","COURSE_TYPE":"' + CourseType + '","HRS_PER_WEEK":"' + HrsPerWeek + '","CREDITS":"' + Credits + '","PAPER_CODE":"' + PaperCode + '","COURSE_TITLE":"' + CourseTitle + '","COURSE_CODE":"' + CourseCode + '","SEMESTER":"' + Semester + '","IS_NME_SUBJECT":"' + IsNME + '","IS_ALLIED_SUBJECT":"' + IsAllied + '","COURSE_ORDER":"' + CourseOrder + '","SUBJECTS":"' + Subjects + '","IS_COMPULSORY_SUBJECT":"' + IsCompulsory + '","UGC_COURSE_TYPE":"' + UGCCourseType + '","PAPER_TYPE":"' + PaperType + '","SUBJECT_TYPE":"' + SubjectType + '"}';
            }
            
            $.ajax({
                url: "@Url.Action("InsertCourseRootInfo", "Academics")",
                method: "POST",

                data: { str: JsonData },
                success: function (data) {
                    alert(data);
                }, error: function (error) {
                    alert('Record not saved try again ..!');
                }
            });
        });
    </script>
}
