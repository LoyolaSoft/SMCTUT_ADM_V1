@model CMS.ViewModel.ViewModel.AdmissionViewModel
@{
    ViewBag.Title = "HostelRegisteredList";
    // Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
    Layout = null;
}

<link href="~/Content/assets/plugins/DataTables/media/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/DataTables/extensions/Responsive/css/responsive.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/bootstrap-select/bootstrap-select.min.css" rel="stylesheet" />

<div class="content" id="content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <ol class="breadcrumb pull-right">
            <li><a href="javascript:;">Home</a></li>
            <li class="active">Hostel Selection </li>
        </ol>
        <h2 class="page-header">Hostel Selection</h2>
        <div class="panel">
            <div class="panel-heading bg-primary">
                <div class="panel-heading-btn">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-danger" data-click="panel-remove"><i class="fa fa-times"></i></a>
                </div>
                <h4 class="panel-title">Hostel Selection</h4>
            </div>
            <div class="panel-body">
                <div class="form-horizontal">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.ApplicationTypeList, "App.Type", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.ApplicationTypeList, (Model.ApplicationTypeList != null) ? Model.ApplicationTypeList : Enumerable.Empty<SelectListItem>(), "--select--", new { @class = " selectpicker show-menu-arrow show-tick drop-down form-control  input-sm", @data_live_search = "true" })
                                    @Html.ValidationMessageFor(model => model.ApplicationTypeList, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.HostelList, "Hostel", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.HostelList, (Model.HostelList != null) ? Model.HostelList : Enumerable.Empty<SelectListItem>(), "--select--", new { @class = " selectpicker show-menu-arrow show-tick drop-down form-control  input-sm", @data_live_search = "true" })
                                    @Html.ValidationMessageFor(model => model.HostelList, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.ApplicantTypeList, "Minority ", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.ApplicantTypeList, (Model.ApplicantTypeList != null) ? Model.ApplicantTypeList : Enumerable.Empty<SelectListItem>(), "--select--", new { @class = " selectpicker show-menu-arrow show-tick drop-down form-control  input-sm", @data_live_search = "true" })
                                    @Html.ValidationMessageFor(model => model.ApplicantTypeList, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="col-md-12">
                            @*<div class="form-group col-md-4">
                                    @Html.LabelFor(model => model.ShiftList, "Shift", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.ShiftList, (Model.ShiftList != null) ? Model.ShiftList : Enumerable.Empty<SelectListItem>(), "--select--", new { @class = " selectpicker show-menu-arrow show-tick drop-down form-control  input-sm", @data_live_search = "true" })
                                        @Html.ValidationMessageFor(model => model.ShiftList, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                            <div class="form-group col-md-4">
                                <div class="hidden" id="hdReligion">
                                    @Html.LabelFor(model => model.Religion, "Religion", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Religion, (Model.Religion != null) ? Model.Religion : Enumerable.Empty<SelectListItem>(), null, new { @class = " selectpicker show-menu-arrow show-tick drop-down form-control  input-sm", @data_live_search = "true", multiple = "multiple", data_actions_box = "true" })
                                        @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-1"><input type="button" name="name" id="btnGet" value="Get" class="btn btn-primary text-white" /></div>
                            <div class="form-group col-md-8">
                                @*<div class="col-md-1"><input type="button" name="name" id="btnGet" value="Get" class="btn btn-primary text-white pull-left" /></div>*@
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12 m-b-5">
                        <div id="divBindStudent">
                            <!--Need to use this field to bind Received Application-->
                        </div>
                    </div>
                    <div class="col-md-12 pull-right">
                        <a id="btnSubmit" value="Submit" class="btn btn-primary hidden">Submit</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script src="~/Content/assets/plugins/DataTables/media/js/jquery.dataTables.js"></script>
<script src="~/Content/assets/plugins/DataTables/media/js/dataTables.bootstrap.min.js"></script>
<script src="~/Content/assets/plugins/DataTables/extensions/Responsive/js/dataTables.responsive.min.js"></script>
<script src="~/Content/assets/plugins/bootstrap-select/bootstrap-select.min.js"></script>
<script>
        //$(".table").DataTable();
        $('.selectpicker').selectpicker({
            size: 4
        });

        $('#btnSubmit').on("click", function () {
            SelectHostelRegistration();
        })

        $('#btnGet').on("click", function () {
            FetchStudent();
        })
        $('#ApplicantTypeList').on("change", function () {
            if ($(this).val() == "2" || $(this).val() == "3")
            {
                $('#hdReligion').removeClass('hidden');
            } else {
                $('#hdReligion').addClass('hidden');
            }
        })
        SelectOrUnselect = function () {
            if (AllchkID.checked == true) {
                $('#tblHostelRegisteredList tbody tr').each(function () {
                    $(this).find('input[type="checkbox"]').each(function () {
                        $('input[type="checkbox"]').attr("checked", true);
                    });
                });
            }
            else {
                $('#tblHostelRegisteredList tbody tr').each(function () {
                    $(this).find('input[type="checkbox"]').each(function () {
                        $('input[type="checkbox"]').attr("checked", false);
                    });
                });
            }
        }
        $('#btnSave').on("click", function () {
            SelectHostelRegistration();
        })


        function FetchStudent()
        {
            if ($('#HostelList').val() && $('#ApplicantTypeList').val())
            {
                var dvReceivedApplication = $('#divBindStudent');
                dvReceivedApplication.empty();
                $.ajax({
                    url: "@Url.Action("BindHostelRegisteredList", "Admission")",
                    method: "POST",
                    data: { sReligion: String($('#Religion').val()), sHostel: $('#HostelList').val(), sApplicantType: $('#ApplicantTypeList').val(), sApplicationType: $('#ApplicationTypeList').val() },
                    datatype: "json",
                    async: false,
                    success: function (data) {
                        dvReceivedApplication.append(data);
                        $('#btnSubmit').removeClass('hidden');
                        $("#tblHostelRegisteredList").DataTable({ "bPaginate": false });
                        $("#tblHostelRegisteredList").addClass("dataTables_filter pull-right");
                        $(".pagination").addClass("pagination pull-right");
                    }, error: function (xhr, textStatus, error) {
                        alert(error + "\n" + textStatus + error);
                    }
            });
            } else {
                alert('Select All the Fields..!');
            }
        }

        function SelectHostelRegistration() {
            var StudentId;
            $('#tblHostelRegisteredList tbody tr').each(function () {
                $(this).find('td').each(function () {
                    var chkBox = $(this).find('input[type="checkbox"]');
                    if (chkBox.is(':checked')) {
                        StudentId = '"' + $(this).find('input[type="checkbox"]').attr("cms-hostelRegistrationId") + '"';
                    }
                });
            });
            if (StudentId == null) {
                alert('Please select the student to update...!!!');
                return false;
            }
            if (!confirm('Are you sure to select this Student(s) ?')) {
                return false;
            }
            var JsonData = '';
            var Search = $('input[type="search"]').val();
            if (Search == '') {
                JsonData = '{"SAVE_HOSTEL_SELECTION":[';
                $('#tblHostelRegisteredList tbody tr').each(function () {
                        var chkBox = $(this).find('input[type="checkbox"]');
                        if (chkBox.is(':checked')) {
                            JsonData += '{"' + "RECEIVE_ID" + '":"' + $(this).find('input[type="checkbox"]').attr("cms-receiveid") + '", "' + "APPLICATION_NO" + '":"' + $(this).find('input[type="checkbox"]').attr("cms-applicationno") + '","' + "ISSUED_ID" + '":"' + $(this).find('input[type="checkbox"]').attr("cms-issuedid") + '", "' + "PROGRAMME_GROUP_ID" + '":"' + $(this).find('input[type="checkbox"]').attr("cms-programmeId") + '","' + "HOSTEL_ID" + '":"' + $('#HostelList').val() + '"},';
                        }
                });
                JsonData = JsonData.slice(0, -1);
                JsonData += ']}';
                $.ajax({
                    url: "@Url.Action("SaveHostelSelection", "Admission")",
                    method: "POST",
                    data: { sSelectionProcess: JsonData },
                    datatype: "json",
                    async: false,
                    success: function (data) {
                        alert(data.Message);
                        FetchStudent();
                    }, error: function (xhr, textStatus, error) {
                        alert(error + "\n" + textStatus + error);
                    }
                });
            } else {
                alert('Please Clear the Search Box...!!!');
            }
        }
</script>

