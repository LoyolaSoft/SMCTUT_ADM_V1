@model CMS.ViewModel.ViewModel.AdmissionViewModel
@{
    ViewBag.Title = "OverAllStatusForAdmission";
    //Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
    Layout = null;
}

<link href="~/Content/assets/plugins/DataTables/media/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/DataTables/extensions/Responsive/css/responsive.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/bootstrap-select/bootstrap-select.min.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/gritter/css/jquery.gritter.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/bootstrap-sweetalert/sweetalert.css" rel="stylesheet" />
<div class="content" id="content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <ol class="breadcrumb pull-right">
            <li><a href="javascript:;">Home</a></li>
            <li class="active">Overall Status Of Admission</li>
        </ol>
        <h2 class="page-header">Overall Status Of Admission</h2>
        <div class="panel">
            <div class="panel-heading bg-primary">
                <div class="panel-heading-btn">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-danger" data-click="panel-remove"><i class="fa fa-times"></i></a>
                </div>
                <h4 class="panel-title">Overall Status Of Admission</h4>
            </div>
            <div class="panel-body">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group col-md-12">
                        <div class="form-group col-md-5">
                            @Html.LabelFor(model => model.ApplicationTypeList, "App.Type", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(model => model.ApplicationTypeList, (Model.ApplicationTypeList != null) ? Model.ApplicantTypeList : Enumerable.Empty<SelectListItem>(), null, new { @class = " selectpicker show-menu-arrow show-tick form-control  input-sm", multiple = "multiple", data_selected_text_format = "count" })
                                @Html.ValidationMessageFor(model => model.ApplicationTypeList, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-5">
                            @Html.LabelFor(model => model.ProgrammeMode, "Pro.Mode", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(model => model.ProgrammeMode, (Model.ProgrammeMode != null) ? Model.ProgrammeMode : Enumerable.Empty<SelectListItem>(), null, new { @class = " selectpicker show-menu-arrow show-tick form-control  input-sm", multiple = "multiple", data_selected_text_format = "count" })
                                @Html.ValidationMessageFor(model => model.ProgrammeMode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-5">
                            @Html.LabelFor(model => model.ShiftList, "Shift", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(model => model.ShiftList, (Model.ShiftList != null) ? Model.ShiftList : Enumerable.Empty<SelectListItem>(), null, new { @class = " selectpicker show-menu-arrow show-tick form-control  input-sm", multiple = "multiple", data_selected_text_format = "count" })
                                @Html.ValidationMessageFor(model => model.ShiftList, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-5">
                            @Html.LabelFor(model => model.ProgrammeList, "Programme", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(model => model.ProgrammeList, (Model.ProgrammeList != null) ? Model.ProgrammeList : Enumerable.Empty<SelectListItem>(), null, new { @class = " selectpicker form-control  input-sm", @data_actions_box = "true", multiple = "multiple", data_live_search = true, data_selected_text_format = "count" })
                                @Html.ValidationMessageFor(model => model.ProgrammeList, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-1">
                            <a class="btn btn-primary" onclick="BindStudentForTransfer()" href="#" title="Click to list the students">Get</a>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 m-b-5">
                    <div id="dvAdmissionStatus" class="table-responsive">
                        <!--Need to use this field to bind Received Application-->
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<script src="~/Content/assets/plugins/DataTables/media/js/jquery.dataTables.js"></script>
<script src="~/Content/assets/plugins/DataTables/media/js/dataTables.bootstrap.min.js"></script>
<script src="~/Content/assets/plugins/DataTables/extensions/Responsive/js/dataTables.responsive.min.js"></script>
<script src="~/Content/assets/plugins/bootstrap-select/bootstrap-select.min.js"></script>
<script src="~/Content/assets/plugins/gritter/js/jquery.gritter.js"></script>
<script src="~/Content/assets/plugins/bootstrap-sweetalert/sweetalert.min.js"></script>
<script src="~/Content/assets/js/ui-modal-notification.demo.min.js"></script>

<script>
    $('.selectpicker').selectpicker({
        size: 4
    });
</script>
<script>
    $('#ShiftList').on('change', function () {
        LoadProgrammes();
    });
    $('#ApplicationTypeList').on('change', function () {
        LoadProgrammes();
    });
    $('#ProgrammeMode').on('change', function () {
        LoadProgrammes();
    });
    function LoadProgrammes() {
        var Shift = String($('#ShiftList').val());
        var App_Type = String($('#ApplicationTypeList').val());
        var ProgrammeMode = String($('#ProgrammeMode').val());
        if ((Shift != null || Shift != "0" || Shift != '' || App_Type != null || App_Type != "0" || App_Type != '' || ProgrammeMode != null || ProgrammeMode != "0" || ProgrammeMode != '')) {
            $.ajax({
                url: '@Url.Action("FetchAdmissionProgramme", "Admission")',
                method: "POST",
                datatype: "json",
                data: { sApplicationType: App_Type, sProgrammeMode: ProgrammeMode, sShift: Shift },
                success: function (data) {
                    $('#ProgrammeList').empty();
                    if (data.Message != null && data.Message != '') {
                        alert(data.Message);
                    } else {
                        $('#ProgrammeList').append(data);
                        $('.selectpicker').selectpicker('refresh');
                    }
                }, error: function (error) {
                    alert('Internal Server Error !');
                }
            });
        }
    }

    function BindStudentForTransfer() {
        var Program = String($('#ProgrammeList').val());
        if ((Program == null || Program == "null" || Program == "0" || Program == '')) {
            alert('Please Choose All The Options .!');
        } else {
            $.ajax({
                url: "@Url.Action("BindOverAllAdmissionStatus", "Admission")",
                method: "POST",
                datatype: "json",
                data: { sJsonProgramId: Program },
                success: function (option) {
                    var divAdmissionStatus = $('#dvAdmissionStatus');
                    divAdmissionStatus.empty();
                    divAdmissionStatus.append(option);
                    $("#tblOverAllAdmission").DataTable();
                }, error: function (error) {
                    alert('Internal Server Error !');
                }
            });
        };
    }
</script>



