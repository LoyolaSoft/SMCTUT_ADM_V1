@model CMS.ViewModel.ViewModel.ExaminationViewModel
@{
    ViewBag.Title = "Set Heads For Course";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

@section styles{

    <link href="~/Content/assets/plugins/bootstrap-datepicker/css/bootstrap-datepicker3.css" rel="stylesheet" />
    <link href="~/Content/assets/plugins/bootstrap-select/bootstrap-select.min.css" rel="stylesheet" />
}
<div id="content" class="content">
    <!-- begin breadcrumb -->
    <ol class="breadcrumb pull-right">
        <li><a href="javascript:;">Home</a></li>
        <li><a href="@Url.Action("CourseHeadsList","Examination")">List Proramme Heads</a></li>
        <li class="active">Course Heads</li>
    </ol>
    <!-- end breadcrumb -->
    <!-- begin page-header -->
    <h1 class="page-header">Course Heads<small></small></h1>
    <!-- end page-header -->
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div class="panel panel-primary">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="panel-heading">
                    <div class="panel-heading-btn">
                        <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                        <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                        <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                        <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-danger" data-click="panel-remove"><i class="fa fa-times"></i></a>
                    </div>
                    <h4 class="panel-title">Course Heads</h4>
                </div>
                <div class="panel-body">

                    <div class="">

                        <div class="form-group col-md-offset-3 col-md-9  ">
                            <div class="row m-b-5">

                                @Html.Label("Batches", htmlAttributes: new { @class = "col-md-4 control-label " })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(m => m.Batch, (Model.Batch != null) ? Model.Batch : Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control    selectpicker show-menu-arrow show-tick", @data_live_search = "true" })
                                    @Html.ValidationMessageFor(m => m.Batch, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="row m-b-5">

                                @Html.Label("Programmes", htmlAttributes: new { @class = "col-md-4 control-label " })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(m => m.Program, (Model.Program != null) ? Model.Program : Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control    selectpicker show-menu-arrow show-tick", @data_live_search = "true" })
                                    @Html.ValidationMessageFor(m => m.Program, "", new { @class = "text-danger" })
                                </div>

                            </div>

                            <div class="row m-b-5">
                                @Html.Label("Course", htmlAttributes: new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.DropDownList("Course", Enumerable.Empty<SelectListItem>(), new { @class = "form-control selectpicker show-menu-arrow show-tick", @data_live_search = "true" })
                                </div>
                            </div>
                            <div class="row m-b-5">

                                @Html.Label("Heads", htmlAttributes: new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(m => m.Heads, (Model.Heads != null) ? Model.Heads : Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control    selectpicker show-menu-arrow show-tick", @data_live_search = "true" })
                                </div>


                            </div>
                            <div class="row m-b-5">
                                <div class="col-lg-12 ">

                                    <a href="@Url.Action("CourseHeadsList","Examination")" id="btnCancel" class="btn btn-danger pull-right ">Cancel</a>
                                    <input type="button" name="name" value="Save" id="btnSave" class="btn btn-primary pull-right m-r-5" />

                                </div>
                                <input type="hidden" name="name" id="hdCourseHeadId" value="" />
                                <input type="hidden" name="name" id="hdExamSettingId" value="@if(!string.IsNullOrEmpty(Model.examSetting.FirstOrDefault().EXAM_SETTING_ID)) { @Model.examSetting.FirstOrDefault().EXAM_SETTING_ID}" />
                            </div>
                        </div>
                    </div>


                </div>


            </div>
        </div>
    }
</div>

@section Scripts{
    <script src="~/Content/assets/plugins/bootstrap-select/bootstrap-select.min.js"></script>
    <script>
        $('.selectpicker').selectpicker({
            size: 4
        });

        $('#Program').change(function () {
            var batch = $('#Batch').val();
            var programme = $(this).val();
            if (batch == '') {
                alert('Please Choose Batch');
                return false;
            }
            $.ajax({
                url: "@Url.Action("LoadCourseForHeads", "Examination")",
                async: false,
                data: { sProgramme: programme, sBatch: batch },
                success: function (objResult) {
                    $('#Course').empty().append('<option value="0" >---Select---</option>' + objResult.sResultStringArray[0]).selectpicker('refresh');
                    $('#Heads').empty().append('<option value="0" >---Select---</option>' + objResult.sResultStringArray[1]).selectpicker('refresh');

                },
                error: function (xhr, textStatus, error) {
                    alert(error + "\n");
                }

            });
        });

        function Validate() {
            if ($('#Batch').val() == '' || $('#Batch').val() == '0') {
                return false;
            }
            if ($('#Program').val() == '' || $('#Program').val() == '0') {
                return false;
            }
            if ($('#Heads').val() == '' || $('#Heads').val() == '0') {
                return false;
            }
            if ($('#Course').val() == '' || $('#Course').val() == '') {
                return false;
            }
            return true;
        }
        $('#btnSave').click(function () {
            if (Validate()) {
                var jsonProgrammeHeads;
                jsonProgrammeHeads = '{"EXAM_SETTING_ID":"' + $('#hdExamSettingId').val() + '","COURSE_HEAD_ID":"' + $('#hdCourseHeadId').val() + '","COURSE_CODE":"' + $('#Course').val() + '","PROGRAMME_ID":"' + $('#Program').val() + '","BATCH_ID": "' + $('#Batch').val() + '","PROGRAMME_HEAD_ID": "' + $('#Heads').val() + '" }';
                $.ajax({
                    url: "@Url.Action("SaveOrUpdateCourseHeads", "Examination")",
                    async: false,
                    data: { sJsonCourseHeads: jsonProgrammeHeads },
                    success: function (objResult) {
                        alert(objResult.Message);
                    },
                    error: function (xhr, textStatus, error) {
                        alert(error + "\n");
                    }
                });
            } else {
                alert('Please provide valid Input !')
            }

        });

        $('#Course').change(function () {

            $.ajax({
                url: "@Url.Action("GetProgrameId", "Examination")",
                async: false,
                data: { sProgramme: $('#Program').val(), sBatch: $('#Batch').val(), sCourseCode: $(this).val() },
                success: function (objResult) {
                    $('#Heads').val(objResult.sResultStringArray[0]).selectpicker('refresh');
                    $('#hdCourseHeadId').val(objResult.sResultStringArray[1]);
                },
                error: function (xhr, textStatus, error) {
                    alert(error + "\n");
                }
            });
        });
    </script>
}