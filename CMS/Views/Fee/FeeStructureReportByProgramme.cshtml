@model CMS.ViewModel.ViewModel.FeeStructureViewModel
@{
    ViewBag.Title = "FeeStructureReportByProgramme";
    // Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
    Layout = null;
}
<link href="~/Content/assets/plugins/DataTables/media/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/DataTables/extensions/Responsive/css/responsive.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/bootstrap-select/bootstrap-select.min.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/gritter/css/jquery.gritter.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/bootstrap-sweetalert/sweetalert.css" rel="stylesheet" />

<div id="content" class="content">
    <!-- begin breadcrumb -->
    <ol class="breadcrumb pull-right">
        <li><a href="javascript:;">Home</a></li>
        <li class="active">Fee Structure Report</li>
    </ol>
    <!-- end breadcrumb -->
    <!-- begin page-header -->
    <h1 class="page-header">Fee Structure Report</h1>
    <!-- end page-header -->

    <div class="panel panel-primary" id="panel">
        <div class="panel-heading">
            <div class="panel-heading-btn">
                <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-danger" data-click="panel-remove"><i class="fa fa-times"></i></a>
            </div>
            <h4 class="panel-title">Fee Structure Report</h4>
        </div>
        <div class="panel-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <div class="col-md-12">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.AcademicyearList, "Academic Year", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.AcademicyearList, (Model.AcademicyearList != null) ? Model.AcademicyearList : Enumerable.Empty<SelectListItem>(), "-- Select --", new { @class = " selectpicker form-control  input-sm", @data_live_search = "true" })
                                @Html.ValidationMessageFor(model => model.AcademicyearList, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.FrequencyList, "Frequency", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.FrequencyList, (Model.FrequencyList != null) ? Model.FrequencyList : Enumerable.Empty<SelectListItem>(), "-- Select --", new { @class = " selectpicker form-control  input-sm", @data_live_search = "true" })
                                @Html.ValidationMessageFor(model => model.FrequencyList, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.ShiftList, "Shift", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.ShiftList, (Model.ShiftList != null) ? Model.ShiftList : Enumerable.Empty<SelectListItem>(), "-- Select --", new { @class = " selectpicker form-control  input-sm", @data_live_search = "true" })
                                @Html.ValidationMessageFor(model => model.ShiftList, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.ProgrammeModeList, "Programme Mode", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.ProgrammeModeList, (Model.ProgrammeModeList != null) ? Model.ProgrammeModeList : Enumerable.Empty<SelectListItem>(), "-- Select --", new { @class = " selectpicker form-control  input-sm", @data_live_search = "true" })
                                @Html.ValidationMessageFor(model => model.ProgrammeModeList, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.ClassYearList, "Programme Year", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.ClassYearList, (Model.ClassYearList != null) ? Model.ClassYearList : Enumerable.Empty<SelectListItem>(), null, new { @class = " selectpicker form-control  input-sm", @data_live_search = "true", multiple = "true" })
                                @Html.ValidationMessageFor(model => model.ClassYearList, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.ProgrammeGroupList, "Programme", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.ProgrammeGroupList, (Model.ProgrammeGroupList != null) ? Model.ProgrammeGroupList : Enumerable.Empty<SelectListItem>(), null, new { @class = " selectpicker form-control  input-sm", @data_live_search = "true", multiple = "true", data_actions_box = "true",data_selected_text_format="count" })
                                @Html.ValidationMessageFor(model => model.ProgrammeGroupList, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group col-md-12">
                            <a class="btn btn-primary pull-right" title="Click to Get Report" id="btnFeeStructureReportByProgramme">Get</a>
                        </div>
                    </div>
                    <div class="col-lg-12 table-responsive">
                        <div id="dvFeeStructureBind"></div>
                        <a class="btn btn-success pull-right hidden" id="btnExport">Export</a>
                    </div>
                </div>

            }
        </div>

    </div>
</div>

<script src="~/Content/assets/plugins/DataTables/media/js/jquery.dataTables.js"></script>
<script src="~/Content/assets/plugins/DataTables/media/js/dataTables.bootstrap.min.js"></script>
<script src="~/Content/assets/plugins/DataTables/extensions/Responsive/js/dataTables.responsive.min.js"></script>
<script src="~/Content/assets/plugins/bootstrap-select/bootstrap-select.min.js"></script>
<script src="~/Content/assets/plugins/gritter/js/jquery.gritter.js"></script>
<script src="~/Content/assets/plugins/bootstrap-sweetalert/sweetalert.min.js"></script>
<script src="~/Content/assets/js/ui-modal-notification.demo.min.js"></script>
<script>
    ContentLoad = function () { }

    $('.selectpicker').selectpicker({
        size: 4
    });
    //GetClick
    $('#btnFeeStructureReportByProgramme').on("click", function () {
        var ProgrammeGroupList = String($('#ProgrammeGroupList').val());
        var ClassYearList = String($('#ClassYearList').val());
        var Academicyear = $('#AcademicyearList option:selected').text()
        if (ProgrammeGroupList != 0 && ClassYearList != 0 && Academicyear != 0 && $('#FrequencyList').val() && $('#ShiftList').val()) {
            $.ajax({
                url: "@Url.Action("BindFeeStructureReportByProgramme", "Fee")",
                method: "POST",
                datatype: "json",
                data: { sAcademicYearId: Academicyear, sFrequecyId: $('#FrequencyList').val(), sClassYear: ClassYearList, sShift: $('#ShiftList').val(), sProgrammeMode: $('#ProgrammeModeList').val(), sProgrammeId: ProgrammeGroupList },
                success: function (data) {
                    var dvFeeMainheadBind = $('#dvFeeStructureBind');
                    dvFeeMainheadBind.empty();
                    dvFeeMainheadBind.append(data);
                    $('#btnExport').removeClass('hidden');
                    $('.selectpicker').selectpicker('refresh');
                }, error: function (error) {
                    alert('Internal Server Error !');
                }
            });
        } else {
            $('.selectpicker').selectpicker('refresh');
            return false;
        }
    });

    LoadProgramme = function () {
        var ShiftList = $('#ShiftList').val();
        var ProgrammeModeList = $('#ProgrammeModeList').val();
        if (ShiftList != 0 && ProgrammeModeList != 0) {
            $.ajax({
                url: "@Url.Action("BindProgrammeGroupByShiftAndProgrammeMode", "Fee")",
                method: "POST",
            datatype: "json",
            data: { sShift:ShiftList, sProgrammeMode: ProgrammeModeList },
            success: function (data) {
                $("#ProgrammeGroupList").empty();
                $("#ProgrammeGroupList").append(data);
                $('.selectpicker').selectpicker('refresh');
            }, error: function (error) {
                alert('Internal Server Error !');
            }
        });
    } else {
        $('.selectpicker').selectpicker('refresh');
        return false;
    }
    }
    $("#ProgrammeModeList").on("change", function () {
        LoadProgramme();
    });
    $("#ShiftList").on("change", function () {
        LoadProgramme();
    });
    $("#btnExport").click(function (e) {
        var sFrequency = $('#FrequencyList Option:selected').text();
        var sAcYear = $('#AcademicyearList Option:selected').text();
        let file = new Blob([$('#dvFeeStructureBind').html()], { type: "application/vnd.ms-excel" });
        let url = URL.createObjectURL(file);
        let a = $("<a />", {
            href: url,
            download: sAcYear + " ( " + sFrequency + " ).xls"
        }).appendTo("body").get(0).click();
        e.preventDefault();
    });
</script>

