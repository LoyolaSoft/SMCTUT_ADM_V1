@model CMS.ViewModel.ViewModel.FeeTransactionViewModel

@{
    ViewBag.Title = "MainHeadwiseReportForCollege";
    Layout = null;
}

<link href="~/Content/assets/plugins/DataTables/media/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/DataTables/extensions/Responsive/css/responsive.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/bootstrap-datepicker/css/bootstrap-datepicker.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/bootstrap-datepicker/css/bootstrap-datepicker3.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/bootstrap-select/bootstrap-select.min.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/gritter/css/jquery.gritter.css" rel="stylesheet" />
<link href="~/Content/assets/plugins/bootstrap-sweetalert/sweetalert.css" rel="stylesheet" />
<div id="content" class="content">
    <!-- begin breadcrumb -->
    <ol class="breadcrumb pull-right">
        <li><a href="javascript:;">Home</a></li>
        <li class="active">Term Fee Report</li>
    </ol>
    <!-- end breadcrumb -->
    <!-- begin page-header -->
    <h1 class="page-header">Term Fee Report</h1>
    <!-- end page-header -->

    <div class="panel panel-primary" id="panel">
        <div class="panel-heading">
            <div class="panel-heading-btn">
                <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" id="btnReload" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-danger" data-click="panel-remove"><i class="fa fa-times"></i></a>
            </div>
            <h4 class="panel-title">Term Fee Report</h4>
        </div>
        <div class="panel-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <div class="form-group col-lg-12">
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.liAcademicYear, "Academic Year", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(model => model.liAcademicYear, (Model.liAcademicYear != null) ? Model.liAcademicYear : Enumerable.Empty<SelectListItem>(), "-- Select --", new { @class = " selectpicker form-control  input-sm", @data_live_search = "true" })
                                @Html.ValidationMessageFor(model => model.liAcademicYear, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label col-md-5">Date From</label>
                            <div class="col-md-7">
                                <div class="input-group date" id="datetimepicker1">
                                    <input type="text" id="txtDateFrom" class="form-control input-sm" placeholder="Select Date" />
                                    <span class="input-group-addon bg-purple"><i class="fa fa-calendar"></i></span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label col-md-5">Date To</label>
                            <div class="col-md-7">
                                <div class="input-group date" id="datetimepicker2">
                                    <input type="text" id="txtDateTo" class="form-control input-sm" placeholder="Select Date" />
                                    <span class="input-group-addon bg-purple"><i class="fa fa-calendar"></i></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-lg-12">
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.liSupFeeFrequency, "Frequency List", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(model => model.liSupFeeFrequency, (Model.liSupFeeFrequency != null) ? Model.liSupFeeFrequency : Enumerable.Empty<SelectListItem>(), "-- Select --", new { @class = " selectpicker form-control  input-sm", @data_live_search = "true" })
                                @Html.ValidationMessageFor(model => model.liSupFeeFrequency, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.liProgrammeModeList, "Programme Mode", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(model => model.liProgrammeModeList, (Model.liProgrammeModeList != null) ? Model.liProgrammeModeList : Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = " selectpicker form-control  input-sm", @data_live_search = "true" })
                                @Html.ValidationMessageFor(model => model.liProgrammeModeList, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.liShift, "Shift", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(model => model.liShift, (Model.liShift != null) ? Model.liShift : Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = " selectpicker form-control  input-sm", @data_live_search = "true", })
                                @Html.ValidationMessageFor(model => model.liShift, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-lg-12">
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.liProgrammeGroup, "Programme List", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(model => model.liProgrammeGroup, (Model.liProgrammeGroup != null) ? Model.liProgrammeGroup : Enumerable.Empty<SelectListItem>(), null, new { @class = " selectpicker form-control  input-sm", @data_live_search = "true", multiple = "multiple", @data_actions_box = "true" })
                                @Html.ValidationMessageFor(model => model.liProgrammeGroup, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.liClassYear, "Programme Year", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(model => model.liClassYear, (Model.liClassYear != null) ? Model.liClassYear : Enumerable.Empty<SelectListItem>(), "-- Select --", new { @class = " selectpicker form-control  input-sm", @data_live_search = "true" })
                                @Html.ValidationMessageFor(model => model.liClassYear, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-1 ">
                            <a class="btn btn-primary pull-right" id="btnGet">Get</a>
                        </div>
                        <div class="form-group col-md-1 pull-right">
                            <a class="btn btn-success hidden" id="btnExport">Export</a>
                        </div>

                    </div>
                </div>
                <div class="col-md-12 table-responsive">
                    <div id="dvFeeReportBind"></div>
                </div>
            }
        </div>

    </div>
</div>

<script src="~/Content/assets/plugins/DataTables/media/js/jquery.dataTables.js"></script>
<script src="~/Content/assets/plugins/DataTables/media/js/dataTables.bootstrap.min.js"></script>
<script src="~/Content/assets/plugins/DataTables/extensions/Responsive/js/dataTables.responsive.min.js"></script>
<script src="~/Content/assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>
<script src="~/Content/assets/plugins/bootstrap-select/bootstrap-select.min.js"></script>
<script src="~/Content/assets/plugins/gritter/js/jquery.gritter.js"></script>
<script src="~/Content/assets/plugins/bootstrap-sweetalert/sweetalert.min.js"></script>
<script src="~/Content/assets/js/ui-modal-notification.demo.min.js"></script>
<script>
    $('.selectpicker').selectpicker({
        size: 4
    });
</script>
<script>

    function handleDatepicker() {
        "use strict";
        $("#txtDateFrom,#txtDateTo").datepicker({
            todayHighlight: true,
            autoclose: true,
            endDate: new Date(),
            format: "dd/mm/yyyy",
            orientation: "right bottom"
        })
    }
    (function () {        
        handleDatepicker();
    }());

    $('#btnGet').on('click', function () {
        loadGird();
    });

    $("#liShift").on("change", function () {
        LoadProgramme();
    });
    $("#liProgrammeModeList").on("change", function () {
        LoadProgramme();
    });
    LoadProgramme = function () {
        var ShiftList = $('#liShift').val();
        var ProgrammeModeList = $('#liProgrammeModeList').val();
        if (ShiftList != 0 && ProgrammeModeList != 0) {
            $.ajax({
                url: "@Url.Action("BindProgrammeGroupByShiftAndProgrammeMode", "Fee")",
                method: "POST",
                datatype: "json",
                data: { sShift: ShiftList, sProgrammeMode: ProgrammeModeList },
                success: function (data) {
                    $("#liProgrammeGroup").empty();
                    $("#liProgrammeGroup").append(data);
                    $('.selectpicker').selectpicker('refresh');
                }, error: function (error) {
                    alert('Internal Server Error !');
                }
            });
        } else {
            $('.selectpicker').selectpicker('refresh');
            return false;
        }
    };
    $('#liAcademicYear').on('change', function () {
        var vAcademicyear = $('#liAcademicYear option:selected').text();
        $.ajax({
            url: '@Url.Action("FetchFrequencyByAcademicYear", "Fee")',
            data: { Academicyear: vAcademicyear },
            success: function (objResult) {
                $('#liSupFeeFrequency').empty();
                $('#liSupFeeFrequency').append('<option value="0">-- select --</option>' + objResult.sResult);
                $('.selectpicker').selectpicker('refresh');
                loadGird();
            },
            error: function (xhr, textStatus, error) {
                alert(error + "\n");
            }
        });
    });
    function loadGird() {
        $('#btnExport').addClass('hidden');
        var vAcademicyear = $('#liAcademicYear option:selected').text();
        var vProgrammeGroupId = String($('#liProgrammeGroup').val());
        var vFeeFrequencyModeId = $('#liSupFeeFrequency').val();
        var vFrequencyType = $('#liSupFeeFrequency Option:selected').attr('cms-FrequencyType');
        var vClassYear = $('#liClassYear').val();
        var vDateFrom = $('#txtDateFrom').val();
        var vDateTo = $('#txtDateTo').val();
        var vShift = $('#liShift').val();
        var vProgrammemode = $('#liProgrammeModeList').val();
        if (vFeeFrequencyModeId != 0 && vAcademicyear != 0 && vProgrammeGroupId != "null" && vFrequencyType != 0 && vClassYear != 0 && vDateFrom != 0 && vDateTo != 0) {
            $.ajax({
                url: '@Url.Action("BindHeadwiseFeeReport", "Fee")',
                data: { sAcYear: vAcademicyear, sProgrammeGroupId: vProgrammeGroupId, sFrequencyMode: vFeeFrequencyModeId, sFrequencyType: vFrequencyType, sClassYear: vClassYear, sDateFrom: vDateFrom, sDateTo: vDateTo, sShift: vShift, sProgrammeMode: vProgrammemode },
                success: function (option) {
                    var dvFeeStructureBind = $('#dvFeeReportBind');
                    dvFeeStructureBind.empty();
                    if (option.Message != null && option.Message != '') {
                        alert(option.Message);
                    } else {
                        dvFeeStructureBind.append(option);
                        $('#btnExport').removeClass('hidden');
                    }
                },
                error: function (xhr, textStatus, error) {
                    alert(error + "\n");
                }
            });
        } else {
            $('#dvFeeReportBind').empty();
            $('.selectpicker').selectpicker('refresh');
            return false;
        }
    }

    $("#btnExport").click(function (e) {
       var sProgramme = $('#liProgrammeGroup Option:selected').text();
        var sFrequency = $('#liSupFeeFrequency Option:selected').text();
       // var sAcYear = $('#liAcademicYear Option:selected').text();
        var sClassYear = $('#liClassYear Option:selected').text();
        var vDateFrom = $('#txtDateFrom').val();
        var vDateTo = $('#txtDateTo').val();
        let file = new Blob([$('#dvFeeReportBind').html()], { type: "application/vnd.ms-excel" });
        let url = URL.createObjectURL(file);
        let a = $("<a />", {
            href: url,
            download: sFrequency + "_TermFee(" + vDateFrom + "-" + vDateTo + " )" + "_" + sProgramme + ".xls"
        }).appendTo("body").get(0).click();
        e.preventDefault();
    });
</script>



