@model CMS.ViewModel.ViewModel.FeedbackViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}
@section styles{
   <link href="~/Content/assets/plugins/intro-js/introjs.css" rel="stylesheet" />
}
<!-- begin #content -->
<div id="content" class="content">
    <!-- begin breadcrumb -->
    <ol class="breadcrumb pull-right">
        <li><a href="javascript:;">Home</a></li>
        <li><a href="javascript:;">Feedback</a></li>
        <li class="active">Feedback Entry</li>
    </ol>
    <!-- end breadcrumb -->
    <!-- begin page-header -->
    <h1 class="page-header">Feedback <small></small></h1>
    <!-- end page-header -->

    <div class="panel panel-info" >
        <div class="panel-heading">
            <div class="panel-heading-btn">
                <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" id="btnReload" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-danger" data-click="panel-remove"><i class="fa fa-times"></i></a>
            </div>
            <h4 class="panel-title">Feedback Entry</h4>
        </div>
        <div class="panel-body">

            @{
            if (TempData["Success"] != null)
            {
                <div class='alert alert-success alert-dismissable'><button type='button' class='close' data-dismiss='alert' aria-hidden='true'>×</button>@TempData["Success"]</div>
            }
            else if (TempData["Failed"] != null)
            {
                <div class='alert alert-danger alert-dismissable'><button type='button' class='close' data-dismiss='alert' aria-hidden='true'>×</button>@TempData["Failed"]</div>
            }
            }
            @using (Html.BeginForm("Save", "Feedback", FormMethod.Post))
                {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <div class="col-md-5 row">
                        @foreach (var item in Model.ObjectiveList)
                            {
                            <div class="" style="display:inline-block">
                                <span class="label label-warning label-lg">
                                    <b> @item.OBJECTIVESHORTTERM</b> - @item.OBJECTIVES
                                </span>
                            </div>
                            }
                    </div>
                    <div class="form-group pull-right row col-md-7">
                        <div class="col-md-6" data-step="1" data-intro="Choose Course">
                            @Html.Label("Course List", htmlAttributes: new { @class = "col-md-4 control-label " })
                            <div class="col-md-8">
                                @if(Model.StudentCourseList!=null){
                                    @Html.DropDownListFor(m => m.StudentCourseList, Model.StudentCourseList,"---Select---", new { @class = "form-control select2" })
                                    @Html.ValidationMessageFor(m => m.StudentCourseList, "", new { @class = "text-danger" })
                }
                            </div>
                        </div>
                        <div class="col-md-6" data-step="2" data-intro="Choose Staff">
                            @Html.Label("Staff List", htmlAttributes: new { @class = "col-md-4 control-label " })
                            <div class="col-md-8">
                                @if(Model.ClasswiseStaffList!=null){
                                    @Html.DropDownListFor(m => m.ClasswiseStaffList, Model.ClasswiseStaffList, new { @class = "form-control select2" })
                                    @Html.ValidationMessageFor(m => m.ClasswiseStaffList, "", new { @class = "text-danger" })
                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div id="divQuestionView" data-step="3" data-intro="All the questions Required."></div>
                    @*<div class="form-group">
                            <div class="col-md-12">
                                @foreach (var QuestionItem in Model.QuestionList)
                                {
                                    <div class="col-md-8">
                                        @if (!string.IsNullOrEmpty(QuestionItem.QUESTION))
                                        { @QuestionItem.QUESTION }
                                    </div>
                                    <div class="col-md-4 pull-right">
                                        @foreach (var ObjectiveItem in Model.ObjectiveList)
                                        {
                                            <div class=" radio-inline">
                                                @Html.RadioButton(QuestionItem.QUESTION_ID, ObjectiveItem.RATING) @ObjectiveItem.OBJECTIVESHORTTERM
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        </div>*@

                    
                </div>
                <div class="form-group ">
                    <div class="col-md-12 col-xs-12 row ">
                        <input type="submit" value="Submit" id="btnSubmit" class="btn btn-success" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<!-- end #content -->

@section scripts{

    
    <script>
        $("#StudentCourseList").on('change', function () {
            //$("#btnReload").click();
            test();
            $("#divQuestionView").empty();

            if ($("#StudentCourseList").val() != '') {
                $.ajax({
                    url: "@Url.Action("StaffListBySubjectId", "Feedback")",
                    async: false,
                    data: { sCourseId: $("#StudentCourseList").val() },
                    success: function (data) {
                        var select = $("#ClasswiseStaffList");
                        select.empty();
                        // selectbox.html(list);
                        select.html(data);
                        $("#ClasswiseStaffList").selectpicker('refresh');
                    }, error: function (ex) {
                        alert('Failed to retrieve .' + ex);
                    }
                });
            }
        });
        $('#ClasswiseStaffList').on('change', function () {
          //  $("#btnReload").click();
            if ($("#StudentCourseList").val() != '' && $('#ClasswiseStaffList').val() != '0') {
                $.ajax({
                    url: "@Url.Action("QuestionView", "Feedback")",
                    async: false,
                    data: { sInputs: $("#StudentCourseList").val(), sAssessee: $("#ClasswiseStaffList").val() },
                    success: function (data, textStatus) {
                        $("#divQuestionView").html(data); // HTML DOM replace
                    },
                    error: function (ex) {
                        alert(ex);
                    }
                });
                }
        });

            $("#btnSubmit").on("click", function () {
                var names = [];
                $('input[type="radio"]').each(function () {
                    // Creates an array with the names of all the different checkbox group.
                    names[$(this).attr('name')] = true;
                });

                // Goes through all the names and make sure there's at least one checked.
                for (name in names) {
                    var radio_buttons = $("input[name='" + name + "']");
                    if (radio_buttons.filter(':checked').length == 0) {
                        alert('All feedback questions are mandatory');
                        return false;
                    }
                    else {
                        // If you need to use the result you can do so without
                        // another (costly) jQuery selector call:
                        var val = radio_buttons.val();
                    }
                }
            });

            function test() {

                var a = $('#panel').closest(".panel");
                if (!$(a).hasClass("panel-loading")) {
                    var t = $(a).find(".panel-body");
                    $(a).addClass("panel-loading"), $(t).prepend('<div class="panel-loader"><span class="spinner-small"></span></div>'), setTimeout(function () {
                        $(a).removeClass("panel-loading"), $(a).find(".panel-loader").remove()
                    },300)
                }

            }

    </script>
<script src="~/Content/assets/plugins/intro-js/intro.js"></script>
<script>
        $(document).ready(function () {
            setTimeout(function () {
                introJs().start();
            }, 500);
        });
</script>
}
