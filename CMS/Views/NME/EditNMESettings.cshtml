@model CMS.ViewModel.ViewModel.NMEViewModel
@using CMS.Utility;
@{
    ViewBag.Title = "EditNMESettings";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

@section styles{
    <link href="~/Content/assets/plugins/select2/dist/css/select2.min.css" rel="stylesheet" />
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="content" id="content">
        <ol class="breadcrumb pull-right">
            <li><a href="javascript:;">Home</a></li>
            <li><a href="@Url.Action("NMESettingsList","NME")">List NME Settings </a></li>
            <li class="active">Edit NME Settings </li>
        </ol>
        <h1 class="page-header">NME Settings </h1>
        <div class="panel">
            <div class="panel-heading bg-primary">
                <div class="panel-heading-btn">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-danger" data-click="panel-remove"><i class="fa fa-times"></i></a>
                </div>
                <h4 class="panel-title">Edit NME Settings</h4>
            </div>
            <div class="panel-body">
                <div class="form-horizontal">
                    <div class="col-md-12">
                        <div class="col-md-6 col-md-offset-3">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.SaveNMESettings.SETTINGS_NAME, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.SaveNMESettings.SETTINGS_NAME, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Setting Name" } })
                                    @Html.ValidationMessageFor(model => model.SaveNMESettings.SETTINGS_NAME, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ShiftList, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.ShiftList, Model.ShiftList, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.ShiftList, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ClassList, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.ClassList, Model.ClassList, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.ClassList, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.SaveNMESettings.DATE_FROM, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    <div class="input-group date" id="datetimepicker2">
                                        @Html.EditorFor(model => model.SaveNMESettings.DATE_FROM, new { htmlAttributes = new { @class = "form-control", id = "Datefrom", placeholder = " Pick Ending Date" } })
                                        @Html.ValidationMessageFor(model => model.SaveNMESettings.DATE_FROM, "", new { @class = "text-danger" })
                                        <span class="input-group-addon bg-purple"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SaveNMESettings.DATE_TO, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    <div class="input-group date" id="datetimepicker2">
                                        @Html.EditorFor(model => model.SaveNMESettings.DATE_TO, new { htmlAttributes = new { @class = "form-control", id = "Dateto", placeholder = " Pick Ending Date" } })
                                        @Html.ValidationMessageFor(model => model.SaveNMESettings.DATE_TO, "", new { @class = "text-danger" })
                                        <span class="input-group-addon bg-purple"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SaveNMESettings.ACADEMIC_YEAR, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.SaveNMESettings.ACADEMIC_YEAR, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Academic Year", MaxLength = "4" } })
                                    @Html.ValidationMessageFor(model => model.SaveNMESettings.ACADEMIC_YEAR, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.SemesterList, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.SemesterList, Model.SemesterList, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.SemesterList, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group pull-right ">
                                <div class="col-md-12">
                                    <a id="btnSubmit" value="SUBMIT" class="btn btn-primary">Submit</a>
                                    <a id="" href="@Url.Action("NMESettingsList","NME")" value="SUBMIT" class="btn btn-danger">Cancel</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section scripts{
    <script src="~/Content/assets/plugins/flot/jquery.flot.min.js"></script>
    <script src="~/Content/assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>
    <script src="~/Content/assets/plugins/select2/dist/js/select2.min.js"></script>
<script>
        $("#ClassList").select2();
</script>
    <script>
        $(document).ready(function () {
            handleDatepicker = function () {
                "use strict";
                $("#Datefrom,#Dateto").datepicker({
                    todayHighlight: !0,
                    autoclose: !0,
                    format: "dd/mm/yyyy",
                    orientation: "right bottom"
                    // 'top': top,
                    // 'left': left
                }
                )
            }
            handleDatepicker();

        });

    </script>
    <script>
        $(document).ready(function () {
            var ID=@Session[Common.SESSION_VARIABLES.SETTINGS_ID].ToString();
            $.ajax({
                url:"@Url.Action("FetchSettingsById", "NME")",
                method: "POST",
                datatype: "html",
                data: { sSettingsId: ID },
                success: function (data) {
                    $("#SaveNMESettings_SETTINGS_NAME").val(data[0].SETTINGS_NAME);
                    $("#ShiftList").val(data[0].SHIFT);
                    $("#ClassList").val(data[0].CLASS_ID);
                    $('#ClassList').append(data[0].CLASS_ID).trigger('change');
                    $("#Datefrom").val(data[0].DATE_FROM);
                    $("#Dateto").val(data[0].DATE_TO);
                    $("#SaveNMESettings_ACADEMIC_YEAR").val(data[0].ACADEMIC_YEAR);
                    $("#SemesterList").val(data[0].SEMESTER);
                }, error: function (error) {
                    alert('No Data Found');
                }
            });
        });
    </script>
    <script>
        $('#ShiftList').on("change", function () {
            var ShiftId = $('#ShiftList').val();
            if (ShiftId != null) {
                $.ajax({
                    url: "@Url.Action("GetClassIdByShiftId", "NME")",
                    data: { sShiftId: ShiftId },
                    success: function (option) {
                        $("#ClassList").empty().append(option);
                    },
                    error: function (xhr, textStatus, error) {
                        alert(error + "\n");
                    }
                });
            }
        });
    </script>
    <script>
        $("#btnSubmit").on("click", function () {
            var SettingName = $("#SaveNMESettings_SETTINGS_NAME").val();
            var ClassId = $("#ClassList").val();
            var DateFrom = $("#Datefrom").val();
            var DateTo = $("#Dateto").val();
            var AcademicYear = $("#SaveNMESettings_ACADEMIC_YEAR").val();
            var SemesterId = $("#SemesterList").val();
            var JsonData;
            if (JsonData == null) {
                JsonData = '{"SETTINGS_NAME":"' + SettingName + '","CLASS_ID":"' + ClassId + '","DATE_FROM":"' + DateFrom + '","DATE_TO":"' + DateTo + '","ACADEMIC_YEAR":"' + AcademicYear + '","SEMESTER":"' + SemesterId + '"}';
            }
            $.ajax({
                url: "@Url.Action("UpdateNMESettings", "NME")",
                method: "POST",
                datatype: "html",
                data: { NMESettings: JsonData },
                success: function (data) {
                    alert(data);
                }, error: function (error) {
                    alert('Record not saved try again ..!');
                }
            });
        });
    </script>
}
