@model CMS.ViewModel.Model.StaffAddressInfo
    @using CMS.Utility;  


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal row">
        <div class="col-md-6">
            <h3>Contact Details</h3><hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CDOORDETAILS, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.CDOORDETAILS, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcDoor", placeholder = "Enter Door Details", @data_parsley_length = "[3,50]", @data_parsley_required = "true" } })
                    @Html.ValidationMessageFor(model => model.CDOORDETAILS, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CSTREET, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.CSTREET, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcStreet", placeholder = "Enter Street", @data_parsley_length = "[3,100]", @data_parsley_required = "true" } })
                    @Html.ValidationMessageFor(model => model.CSTREET, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CPLACE, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.CPLACE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcPlace", placeholder = "Enter Place", @data_parsley_length = "[3,100]", @data_parsley_required = "true" } })
                    @Html.ValidationMessageFor(model => model.CPLACE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CCITY, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.CCITY, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcCity", placeholder = "Enter City", @data_parsley_length = "[3,100]" } })
                    @Html.ValidationMessageFor(model => model.CCITY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CPINCODE, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.CPINCODE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcPincode", placeholder = "Enter Pincode", @data_parsley_type = "number", @data_parsley_length = "[6,10]", @data_parsley_required = "true" } })
                    @Html.ValidationMessageFor(model => model.CPINCODE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CDISTRICT, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.CDISTRICT, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcDistrict", placeholder = "Enter District", @data_parsley_length = "[3,100]", @data_parsley_required = "true" } })
                    @Html.ValidationMessageFor(model => model.CDISTRICT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CCOUNTRY, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.CCOUNTRY, Model.CCOUNTRY, "-- Select --", new { @class = "form-control input-sm", id = "ddlcCountry" })
                    @Html.ValidationMessageFor(model => model.CCOUNTRY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CVILLAGE, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.CVILLAGE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcVillage", placeholder = "Enter Village", @data_parsley_length = "[3,100]" } })
                    @Html.ValidationMessageFor(model => model.CVILLAGE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CPHONENO, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.CPHONENO, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcPhoneNo", placeholder = "Enter PhoneNo", @data_parsley_required = "true", @data_parsley_type = "number", @data_parsley_length = "[9,50]" } })
                    @Html.ValidationMessageFor(model => model.CPHONENO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CCELLNO, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.CCELLNO, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcCellNo", placeholder = "Enter CellNo", @data_parsley_length = "[9,50]", @data_parsley_type = "number" } })
                    @Html.ValidationMessageFor(model => model.CCELLNO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CEMAIL, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.CEMAIL, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcEmail", placeholder = "Enter Email", @data_parsley_type = "email", @data_parsley_required = "true", @data_parsley_length = "[3,50]" } })
                    @Html.ValidationMessageFor(model => model.CEMAIL, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-12 pull-right">
                <div class="checkbox">
                    <label>
                        <input type="checkbox" id="chAddress" name="Address" /> Click If Both Are Same
                    </label>
                </div>
                <div class="form-group">
                    <label class="col-md-6 control-label"></label>
                    <div class="col-md-9">
                        <a id="btnStuAddess" class="btn btn-primary">Submit</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <h3>Permanent Details</h3><hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div id="PermenentAddress">
                <div class="form-group">
                    @Html.LabelFor(model => model.PDOORDETAILS, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PDOORDETAILS, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpDoorDetails", placeholder = "Enter Door Details", @data_parsley_length = "[3,50]" } })
                        @Html.ValidationMessageFor(model => model.PDOORDETAILS, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PSTREET, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PSTREET, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpStreet", placeholder = "Enter street", @data_parsley_length = "[3,100]" } })
                        @Html.ValidationMessageFor(model => model.PSTREET, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PPLACE, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PPLACE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpPlace", placeholder = "Enter Place", @data_parsley_length = "[3,100]" } })
                        @Html.ValidationMessageFor(model => model.PPLACE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PCITY, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PCITY, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpCity", placeholder = "Enter City", @data_parsley_length = "[3,100]" } })
                        @Html.ValidationMessageFor(model => model.PCITY, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PPINCODE, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PPINCODE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpPincode", placeholder = "Enter Pincode", @data_parsley_type = "number", @data_parsley_length = "[6,10]" } })
                        @Html.ValidationMessageFor(model => model.PPINCODE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PDISTRICT, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PDISTRICT, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpDistrict", placeholder = "Enter District", @data_parsley_length = "[3,100]" } })
                        @Html.ValidationMessageFor(model => model.PDISTRICT, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PCOUNTRY, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.PCOUNTRY, Model.PCOUNTRY, "-- Select --", new { @class = "form-control input-sm", id = "ddlpCountry" })
                        @Html.ValidationMessageFor(model => model.PCOUNTRY, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PVILLAGE, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PVILLAGE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpVillage", placeholder = "Enter Village", @data_parsley_length = "[3,100]" } })
                        @Html.ValidationMessageFor(model => model.PVILLAGE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PPHONENO, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PPHONENO, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpPhoneNo", placeholder = "Enter PhoneNo", @data_parsley_type = "number", @data_parsley_length = "[9,50]" } })
                        @Html.ValidationMessageFor(model => model.PPHONENO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PCELLNO, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PCELLNO, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpCellNo", placeholder = "Enter CellNo", @data_parsley_type = "number", @data_parsley_length = "[9,50]" } })
                        @Html.ValidationMessageFor(model => model.PCELLNO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PEMAIL, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PEMAIL, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpEmail", placeholder = "Enter Email", @data_parsley_type = "email", @data_parsley_length = "[3,50]" } })
                        @Html.ValidationMessageFor(model => model.PEMAIL, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <script>
        $(document).ready(function()
        {
            // Address
            var FetchAddress=function()
            {
                Id= @Session[Common.SESSION_VARIABLES.STAFF_ID];
                $.ajax({
                    url:"@Url.Action("FetchAddressData", "Staff")",
                    method:"POST",
                    datatype:"html",
                    data: {sStaffId:Id},
                    success: function (data)
                    { 
                        $("#txtcDoor").val(data.CDOORDETAILS);
                        $("#txtcStreet").val(data.CSTREET);
                        $("#txtcPlace").val(data.CPLACE);
                        $("#txtcCity").val(data.CCITY);
                        $("#txtcPincode").val(data.CPINCODE);
                        $("#txtcDistrict").val(data.CDISTRICT);
                        $("#ddlcCountry").val(data.CCOUNTRY);
                        $("#txtcVillage").val(data.CVILLAGE);
                        $("#txtcPhoneNo").val(data.CPHONENO);
                        $("#txtcCellNo").val(data.CCELLNO);
                        $("#txtcEmail").val(data.CEMAIL);
                        $("#txtpDoorDetails").val(data.PDOORDETAILS);
                        $("#txtpStreet").val(data.PSTREET);
                        $("#txtpPlace").val(data.PPLACE);
                        $("#txtpCity").val(data.PCITY);
                        $("#txtpPincode").val(data.PPINCODE);
                        $("#txtpDistrict").val(data.PDISTRICT);
                        $("#ddlpCountry").val(data.PCOUNTRY);
                        $("#txtpVillage").val(data.PVILLAGE);
                        $("#txtpPhoneNo").val(data.PPHONENO);
                        $("#txtpCellNo").val(data.PCELLNO);
                        $("#txtpEmail").val(data.PEMAIL);
                    },error:function(error)
                    {
                        alert('No Data Found');
                    }
                });
            }
            FetchAddress();
        });
        
        // Insert Address ...
        $('#btnStuAddess').on('click', function ()
        {
            var isValid = true;
            if ($('#nav-tab2-2').parsley().validate() !== true) isValid = false;
            if (!isValid) { 
                //gritter-info,danger,success,warning,default
                myAlert('Something went wrong ! Please check your inputs !', 'gritter-warning','');
                return false;
            } 
            var cDoorDetails = $("#txtcDoor").val();
            var cStreet = $("#txtcStreet").val();
            var cPlace = $("#txtcPlace").val();
            var cCity = $("#txtcCity").val();
            var cPincode = $("#txtcPincode").val();
            var cDistrict = $("#txtcDistrict").val();
            var cVillage = $("#txtcVillage").val();
            var cPhoneNo = $("#txtcPhoneNo").val();
            var cCellNo = $("#txtcCellNo").val();
            var cEmail = $("#txtcEmail").val();
            var cCountry = $("#ddlcCountry").val();
            var pDoorDetails = $("#txtpDoorDetails").val();
            var pStreet = $("#txtpStreet").val();
            var pPlace = $("#txtpPlace").val();
            var pCity = $("#txtpCity").val();
            var pPincode = $("#txtpPincode").val();
            var pDistrict = $("#txtpDistrict").val();
            var pCountry = $("#ddlpCountry").val();
            var pVillage = $("#txtpVillage").val();
            var pPhoneNo = $("#txtpPhoneNo").val();
            var pCellNo = $("#txtpCellNo").val();
            var pEmail = $("#txtpEmail").val();
            var JsonData;
            if ($('#chAddress').is(':checked'))
            {
                JsonData = '{"cDoorDetails":"' + cDoorDetails + '","cStreet":"' + cStreet + '","cPlace":"' + cPlace + '","cCity":"' + cCity + '","cPincode":"' + cPincode + '","cDistrict":"' + cDistrict + '","CCOUNTRY":"' + cCountry + '","cVillage":"' + cVillage + '","cPhoneNo":"' + cPhoneNo + '","cCellNo":"' + cCellNo + '","cEmail":"' + cEmail + '","pDoorDetails":"' + cDoorDetails + '","pStreet":"' + cStreet + '","pPlace":"' + cPlace + '","pCity":"' + cCity + '","pPincode":"' + cPincode + '","pDistrict":"' + cDistrict + '","PCOUNTRY":"' + cCountry + '","pVillage":"' + cVillage + '","pPhoneNo":"' + cPhoneNo + '","pCellNo":"' + cCellNo + '","pEmail":"' + cEmail + '"}';
            }else {
                JsonData = '{"cDoorDetails":"' + cDoorDetails + '","cStreet":"' + cStreet + '","cPlace":"' + cPlace + '","cCity":"' + cCity + '","cPincode":"' + cPincode + '","cDistrict":"' + cDistrict + '","CCOUNTRY":"' + cCountry + '","cVillage":"' + cVillage + '","cPhoneNo":"' + cPhoneNo + '","cCellNo":"' + cCellNo + '","cEmail":"' + cEmail + '","pDoorDetails":"' + pDoorDetails + '","pStreet":"' + pStreet + '","pPlace":"' + pPlace + '","pCity":"' + pCity + '","pPincode":"' + pPincode + '","pDistrict":"' + pDistrict + '","PCOUNTRY":"' + pCountry + '","pVillage":"' + pVillage + '","pPhoneNo":"' + pPhoneNo + '","pCellNo":"' + pCellNo + '","pEmail":"' + pEmail + '"}';
            }
            $.ajax({
                url:"@Url.Action("UpdateAddress", "Staff")",
                method: "POST",
                datatype: "html",
                data: { str: JsonData },
                success: function (data) {
                    alert(data);
                }, error: function (error) {
                    alert('Session time out try again ..!');
                }
            });
        });
            $("#chAddress").on("click", function ()
            {
                $("#PermenentAddress").toggle();
            });
        </script>
    </div>
   
}