@model CMS.ViewModel.ViewModel.StaffViewModel

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal row">
        <div class="col-md-6">
            <h3>Contact Details</h3><hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.CDOOR_DETAILS, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.CDOOR_DETAILS, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcDoor", placeholder = "Enter Door Details" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.CDOOR_DETAILS, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.CSTREET, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.CSTREET, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcStreet", placeholder = "Enter Street" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.CSTREET, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.CPLACE, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.CPLACE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcPlace", placeholder = "Enter Place" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.CPLACE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.CCITY, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.CCITY, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcCity", placeholder = "Enter City" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.CCITY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.CPIN_CODE, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.CPIN_CODE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcPincode", placeholder = "Enter Pincode" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.CPIN_CODE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.CDISTRICT, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.CDISTRICT, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcDistrict", placeholder = "Enter District" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.CDISTRICT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CCOUNTRY, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.objStaffAddressProfile.CCOUNTRY, Model.CCOUNTRY, "-- Select --", new { @class = "form-control input-sm", id = "ddlcCountry" })
                    @Html.ValidationMessageFor(model => model.CCOUNTRY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.CVILLAGE, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.CVILLAGE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcVillage", placeholder = "Enter Village" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.CVILLAGE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.CPHONE_NO, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.CPHONE_NO, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcPhoneNo", placeholder = "Enter PhoneNo" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.CPHONE_NO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.CCELL_NO, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.CCELL_NO, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcCellNo", placeholder = "Enter CellNo" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.CCELL_NO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.CEMAIL, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.CEMAIL, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtcEmail", placeholder = "Enter Email" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.CEMAIL, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <h3>Permanent Details</h3><hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.PDOOR_DETAILS, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.PDOOR_DETAILS, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpDoorDetails", placeholder = "Enter Door Details" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.PDOOR_DETAILS, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.PSTREET, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.PSTREET, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpStreet", placeholder = "Enter street" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.PSTREET, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.PPLACE, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.PPLACE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpPlace", placeholder = "Enter Place" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.PPLACE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.PCITY, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.PCITY, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpCity", placeholder = "Enter City" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.PCITY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.PPIN_CODE, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.PPIN_CODE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpPincode", placeholder = "Enter Pincode" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.PPIN_CODE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.PDISTRICT, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.PDISTRICT, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpDistrict", placeholder = "Enter District" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.PDISTRICT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PCOUNTRY, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.PCOUNTRY, Model.PCOUNTRY, "-- Select --", new { @class = "form-control input-sm", id = "ddlpCountry" })
                    @Html.ValidationMessageFor(model => model.PCOUNTRY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.PVILLAGE, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.PVILLAGE, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpVillage", placeholder = "Enter Village" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.PVILLAGE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.PPHONE_NO, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.PPHONE_NO, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpPhoneNo", placeholder = "Enter PhoneNo" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.PPHONE_NO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.PCELL_NO, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.PCELL_NO, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpCellNo", placeholder = "Enter CellNo" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.PCELL_NO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objStaffAddressProfile.PEMAIL, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.objStaffAddressProfile.PEMAIL, new { htmlAttributes = new { @class = "form-control input-sm", id = "txtpEmail", placeholder = "Enter Email" } })
                    @Html.ValidationMessageFor(model => model.objStaffAddressProfile.PEMAIL, "", new { @class = "text-danger" })
                </div>
            </div>
            <div id="txtAddressNo" class="hidden"></div>
            <div id="txtStaffNo" class="hidden"></div>

            <div class="form-group pull-right">
                <div class="col-md-12 pull-right">
                    <a id="btnStfAddess" class="btn btn-primary">Submit</a>
                </div>
            </div>
        </div>
        <script>
        $(document).ready(function()
        {
            // Address
            var FetchAddress=function()
            {
                $.ajax({
                    url:"@Url.Action("FetchStaffAddressProfile", "Staff")",
                    method:"POST",
                    success: function (data)
                    {
                        $("#txtAddressNo").val(data[0].ADDRESS_NO);
                        $("#txtStaffNo").val(data[0].STAFFNO);
                        $("#txtcDoor").val(data[0].CDOOR_DETAILS);
                        $("#txtcStreet").val(data[0].CSTREET);
                        $("#txtcPlace").val(data[0].CPLACE);
                        $("#txtcCity").val(data[0].CCITY);
                        $("#txtcPincode").val(data[0].CPIN_CODE);
                        $("#txtcDistrict").val(data[0].CDISTRICT);
                        $("#ddlcCountry").val(data[0].CCOUNTRY);
                        $("#txtcVillage").val(data[0].CVILLAGE);
                        $("#txtcPhoneNo").val(data[0].CPHONE_NO);
                        $("#txtcCellNo").val(data[0].CCELL_NO);
                        $("#txtcEmail").val(data[0].CEMAIL);
                        $("#txtpDoorDetails").val(data[0].PDOOR_DETAILS);
                        $("#txtpStreet").val(data[0].PSTREET);
                        $("#txtpPlace").val(data[0].PPLACE);
                        $("#txtpCity").val(data[0].PCITY);
                        $("#txtpPincode").val(data[0].PPIN_CODE);
                        $("#txtpDistrict").val(data[0].PDISTRICT);
                        $("#ddlpCountry").val(data[0].PCOUNTRY);
                        $("#txtpVillage").val(data[0].PVILLAGE);
                        $("#txtpPhoneNo").val(data[0].PPHONE_NO);
                        $("#txtpCellNo").val(data[0].PCELL_NO);
                        $("#txtpEmail").val(data[0].PEMAIL);
                    },error:function(error)
                    {
                        alert('No Data Found');
                    }
                });
            }
            FetchAddress();
        });
            $('#btnStfAddess').on('click', function ()
            {
                var AddressNo = $("#txtAddressNo").val();
                var StaffNo = $("#txtStaffNo").val();
                var cDoorDetails = $("#txtcDoor").val();
                var cStreet = $("#txtcStreet").val();
                var cPlace = $("#txtcPlace").val();
                var cCity = $("#txtcCity").val();
                var cPincode = $("#txtcPincode").val();
                var cDistrict = $("#txtcDistrict").val();
                var cVillage = $("#txtcVillage").val();
                var cPhoneNo = $("#txtcPhoneNo").val();
                var cCellNo = $("#txtcCellNo").val();
                var cEmail = $("#txtcEmail").val();
                var cCountry = $("#ddlcCountry").val();
                var pDoorDetails = $("#txtpDoorDetails").val();
                var pStreet = $("#txtpStreet").val();
                var pPlace = $("#txtpPlace").val();
                var pCity = $("#txtpCity").val();
                var pPincode = $("#txtpPincode").val();
                var pDistrict = $("#txtpDistrict").val();
                var pCountry = $("#ddlpCountry").val();
                var pVillage = $("#txtpVillage").val();
                var pPhoneNo = $("#txtpPhoneNo").val();
                var pCellNo = $("#txtpCellNo").val();
                var pEmail = $("#txtpEmail").val();
                var JsonData;
                if (JsonData == null)
                {
                    JsonData = '{"ADDRESS_NO":"' + AddressNo + '","STAFFNO":"' + StaffNo + '","CDOOR_DETAILS":"' + cDoorDetails + '","CSTREET":"' + cStreet + '","CPLACE":"' + cPlace + '","CCITY":"' + cCity + '","CPIN_CODE":"' + cPincode + '","CDISTRICT":"' + cDistrict + '","CCOUNTRY":"' + cCountry + '","CVILLAGE":"' + cVillage + '","CPHONE_NO":"' + cPhoneNo + '","CCELL_NO":"' + cCellNo + '","CEMAIL":"' + cEmail + '","PDOOR_DETAILS":"' + pDoorDetails + '","PSTREET":"' + pStreet + '","PPLACE":"' + pPlace + '","PCITY":"' + pCity + '","PPIN_CODE":"' + pPincode + '","PDISTRICT":"' + pDistrict + '","PCOUNTRY":"' + pCountry + '","PVILLAGE":"' + pVillage + '","PPHONE_NO":"' + pPhoneNo + '","PCELL_NO":"' + pCellNo + '","PEMAIL":"' + pEmail + '"}';
                }
                $.ajax({
                    url:"@Url.Action("UpdateStaffAddressProflie", "Staff")",
                    method: "POST",
                datatype: "html",
                data: { StaffAddress: JsonData },
                success: function (data) {
                    alert(data);
                }, error: function (error) {
                    alert('Session time out try again ..!');
                }
            });
            });
        
        </script>
    </div>
}


