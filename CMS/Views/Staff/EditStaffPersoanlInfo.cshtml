@model CMS.ViewModel.Model.StaffPersonalInfo



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h4>Personal Details</h4>
    <hr />

    <div class="form-horizontal row">
        <div class="col-md-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter FirstName", @data_parsley_required = "true", @data_parsley_length = "[3,50]" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter LastName", @data_parsley_length = "[3,50]", @data_parsley_type = "alphanum" } })
                    @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StaffCode, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.StaffCode, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Staff Code", style = "text-transform:uppercase" } })
                    @Html.ValidationMessageFor(model => model.StaffCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.KnowAs, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.KnowAs, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter NickName", @data_parsley_type = "alphanum", @data_parsley_length = "[3,50]" } })
                    @Html.ValidationMessageFor(model => model.KnowAs, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PlaceOfBirth, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.PlaceOfBirth, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter PlaceOfBirth", @data_parsley_length = "[3,100]" } })
                    @Html.ValidationMessageFor(model => model.PlaceOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateofBirth, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <div class="input-group date" id="datetimepicker1">
                        @Html.EditorFor(model => model.DateofBirth, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Select DateOfBirth", @data_parsley_required = "true" } })
                        @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger" })
                        <span class="input-group-addon bg-purple"><i class="fa fa-calendar"></i></span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfJoin, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <div class="input-group date" id="datetimepicker2">
                        @Html.EditorFor(model => model.DateOfJoin, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Select DateOfJoin" } })
                        @Html.ValidationMessageFor(model => model.DateOfJoin, "", new { @class = "text-danger" })
                        <span class="input-group-addon bg-purple"><i class="fa fa-calendar"></i></span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @if (Model.BloodGroup != null)
                    {
                        @Html.DropDownListFor(model => model.BloodGroup, Model.BloodGroup, "-- Select --", new { @class = "drop-down form-control input-sm" })
                        @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })
                    }
                   
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @if (Model.Department != null)
                    {
                        @Html.DropDownListFor(model => model.Department, Model.Department, "-- Select --", new { @class = "drop-down form-control input-sm", @data_parsley_required = "true" })
                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                    }
                   
                </div>
            </div>

        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Community, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @if (Model.Community != null)
                    {
                        @Html.DropDownListFor(model => model.Community, Model.Community, "-- Select --", new { @class = "drop-down form-control input-sm" })
                        @Html.ValidationMessageFor(model => model.Community, "", new { @class = "text-danger" })
                    }
                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @if (Model.Gender != null)
                    {
                        @Html.DropDownListFor(model => model.Gender, Model.Gender, "-- Select --", new { @class = "drop-down form-control input-sm", @data_parsley_required = "true" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    }
                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Maritalstatus, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @if (Model.Maritalstatus != null)
                    {
                        @Html.DropDownListFor(model => model.Maritalstatus, Model.Maritalstatus, "-- Select --", new { @class = "drop-down form-control input-sm" })
                        @Html.ValidationMessageFor(model => model.Maritalstatus, "", new { @class = "text-danger" })
                    }
                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MotherTongue, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @if (Model.MotherTongue != null)
                    {
                        @Html.DropDownListFor(model => model.MotherTongue, Model.MotherTongue, "-- Select --", new { @class = "drop-down form-control input-sm" })
                        @Html.ValidationMessageFor(model => model.MotherTongue, "", new { @class = "text-danger" })
                    }
                   
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @if (Model.Nationality != null)
                    {
                        @Html.DropDownListFor(model => model.Nationality, Model.Nationality, "-- Select --", new { @class = "drop-down form-control input-sm" })
                        @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                    }
                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @if (Model.Religion != null)
                    {
                        @Html.DropDownListFor(model => model.Religion, Model.Religion, "-- Select --", new { @class = "drop-down form-control input-sm" })
                        @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                    }
                    
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.Role, Model.Role, "--select--", new { @class = "form-control", @data_parsley_required = "true" })
                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.UserType, Model.UserType, "--select--", new { @class = "form-control", @data_parsley_required = "true" })
                    @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                </div>
            </div>
            

            <div class="form-group pull-right">
                <div class="col-md-12 pull-right">
                    <a id="btnEditPersonalInfo" class="btn btn-primary">Submit</a>
                </div>
            </div>
        </div>
    </div>
}
