@model CMS.ViewModel.Model.StudentPriviousQualification


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h4>Privious Qualification Details</h4>
    <hr />
    <div class="form-horizontal">

        <div class="col-md-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.LAST_STUDIED_CLASS, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.LAST_STUDIED_CLASS, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Last Studied Class", @data_parsley_length = "[3,45]" } })
                    @Html.ValidationMessageFor(model => model.LAST_STUDIED_CLASS, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LAST_SCHOOL_OR_COLLEGE, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.LAST_SCHOOL_OR_COLLEGE, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Last Studied", @data_parsley_required = "true", @data_parsley_length = "[3,150]" } })
                    @Html.ValidationMessageFor(model => model.LAST_SCHOOL_OR_COLLEGE, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.LAST_STUDIED_PLACE, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.LAST_STUDIED_PLACE, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Last Studied Place", @data_parsley_required = "true", @data_parsley_length = "[3,500]" } })
                    @Html.ValidationMessageFor(model => model.LAST_STUDIED_PLACE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EXAM_PASSED, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.EXAM_PASSED, Model.EXAM_PASSED, "-- select --", new { @class = "form-control input-sm", @data_parsley_required = "true" })
                    @Html.ValidationMessageFor(model => model.EXAM_PASSED, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group pull-right">
                <div class="col-md-12 pull-right">
                    <a class="btn btn-primary" id="btnPriviousQualification">Submit</a>
                </div>
            </div>

        </div>

        <script>
            // Add Student Privious Qualification ...
            $("#btnPriviousQualification").on("click", function ()
            {
                var isValid = true;
                if ($('#nav-tab1-17').parsley().validate() !== true) isValid = false;
                if (!isValid) {
                    //gritter-info,danger,success,warning,default
                    myAlert('Something went wrong ! Please check your inputs !', 'gritter-warning', '');
                    return false;
                }
                var LastStudiedCls = $("#LAST_STUDIED_CLASS").val();
                var LastSchool = $("#LAST_SCHOOL_OR_COLLEGE").val();
                var LStudiedPlace = $("#LAST_STUDIED_PLACE").val();
                var ExamPassed = $("#EXAM_PASSED").val();
                var JsonData;
                if (JsonData == null)
                {
                    JsonData = '{"LstudiedClass":"' + LastStudiedCls + '","LSchool":"' + LastSchool + '","LStudied":"' + LStudiedPlace + '","ExamPassed":"' + ExamPassed + '"}';
                }
                $.ajax({
                    url: "@Url.Action("UpdatePriviousQualification", "Student")",
                    method: "POST",
                    datatype: "html",
                    data: { JsonPriviousQualification: JsonData },
                    success:function(data)
                    {
                        alert(data);
                    },error:function(error)
                    {
                        alert('Session timeout try again ...!');
                    }
                });
            });
        </script>
    </div>
}