@model CMS.ViewModel.Model.StuAddressInfo


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="col-md-6"><h4>Contact Address</h4><hr /></div>
    <div class="col-md-6"><h4>Permanent Address</h4><hr /></div>
    <div class="form-horizontal">
        <div class="col-md-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.C_DOOR_DETAIL, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.C_DOOR_DETAIL, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Door Details", id = "txtcDoor", @data_parsley_required = "true", @data_parsley_length = "[3,20]" } })
                    @Html.ValidationMessageFor(model => model.C_DOOR_DETAIL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.C_STREET, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.C_STREET, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Street", id = "cStreet", @data_parsley_required = "true", @data_parsley_length = "[3,100]" } })
                    @Html.ValidationMessageFor(model => model.C_STREET, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.C_VILLAGE_AREA, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.C_VILLAGE_AREA, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Village Area", id = "cVillage", @data_parsley_length = "[3,100]" } })
                    @Html.ValidationMessageFor(model => model.C_VILLAGE_AREA, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.C_POST_PLACE_TOWN, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.C_POST_PLACE_TOWN, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Post Area", id = "cpostplace", @data_parsley_length = "[3,100]" } })
                    @Html.ValidationMessageFor(model => model.C_POST_PLACE_TOWN, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.C_TAULK, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.C_TAULK, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Taulk", id = "ctaluk", @data_parsley_required = "true", @data_parsley_length = "[3,100]" } })
                    @Html.ValidationMessageFor(model => model.C_TAULK, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.C_CITY, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.C_CITY, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter City", id = "cCity", @data_parsley_length = "[3,100]" } })
                    @Html.ValidationMessageFor(model => model.C_CITY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.C_DISTRICT, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.C_DISTRICT, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter District", id = "cdistrict", @data_parsley_required = "true", @data_parsley_length = "[3,100]" } })
                    @Html.ValidationMessageFor(model => model.C_DISTRICT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.C_PINCODE, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.C_PINCODE, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter PinCode", id = "cpincode", @data_parsley_required = "true", @data_parsley_length = "[6,15]", @data_parsley_type = "number" } })
                    @Html.ValidationMessageFor(model => model.C_PINCODE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.C_COUNTRY, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.C_COUNTRY, Model.C_COUNTRY, "-- Select --", new { @class = "drop-down form-control input-sm", id = "ccountry" })
                    @Html.ValidationMessageFor(model => model.C_COUNTRY, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-12 pull-right">
                <div class="checkbox">
                    <label>
                        <input type="checkbox" id="chAddress" name="Address" /> Click if both are same
                    </label>
                </div>
                <div class="form-group">
                    @*<label class="col-md- control-label"></label>*@
                    <div class="col-md-9">
                        <a class="btn btn-primary" id="btnEditStuAddress">Update</a>
                    </div>
                </div>
            </div>  
        </div>

        <div class="col-md-6">
            <div id="dvPermenentAddress">
                <div class="form-group">
                    @Html.LabelFor(model => model.P_DOOR_DETAIL, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.P_DOOR_DETAIL, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Door Details", id = "txtPdoor", @data_parsley_length = "[3,20]" } })
                        @Html.ValidationMessageFor(model => model.P_DOOR_DETAIL, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.P_STREET, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.P_STREET, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Street", id = "txtpStreet", @data_parsley_length = "[3,100]" } })
                        @Html.ValidationMessageFor(model => model.P_STREET, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.P_VILLAGE_AREA, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.P_VILLAGE_AREA, new { htmlAttributes = new { @class = "form-control input - sm", placeholder = "Enter Village Area", id = "txtpvillage", @data_parsley_length = "[3,100]" } })
                        @Html.ValidationMessageFor(model => model.P_VILLAGE_AREA, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.P_POST_PLACE_TOWN, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.P_POST_PLACE_TOWN, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Post Area", id = "txtpPostPlace", @data_parsley_length = "[3,100]" } })
                        @Html.ValidationMessageFor(model => model.P_POST_PLACE_TOWN, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.P_TAULK, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.P_TAULK, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Taulk", id = "ptaluk", @data_parsley_length = "[3,100]" } })
                        @Html.ValidationMessageFor(model => model.P_TAULK, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.P_CITY, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.P_CITY, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter City", id = "txtpcity", @data_parsley_length = "[3,100]" } })
                        @Html.ValidationMessageFor(model => model.P_CITY, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.P_DISTRICT, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.P_DISTRICT, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter District", id = "txtpdistrict", @data_parsley_length = "[3,100]" } })
                        @Html.ValidationMessageFor(model => model.P_DISTRICT, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.P_PINCODE, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.P_PINCODE, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter PinCode", id = "txtppincode", @data_parsley_length = "[6,15]", @data_parsley_type = "number" } })
                        @Html.ValidationMessageFor(model => model.P_PINCODE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.P_COUNTRY, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.P_COUNTRY, Model.P_COUNTRY, "-- Select --", new { @class = "drop-down form-control input-sm", id = "ddlpcountry" })
                        @Html.ValidationMessageFor(model => model.P_COUNTRY, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <script>
            $(document).ready(function ()
            {
                // Fetch Address ..
                GetAddress=function(ID)
                {
                    $.ajax({
                        url:"@Url.Action("FetchAddress", "Student")",
                        method:"POST",
                        datatype:"html",
                        data:{sStudentID:ID},
                        success:function(data)
                        {
                            $("#txtcDoor").val(data.CDoorDetail);
                            $("#cStreet").val(data.CStreet);
                            $("#cVillage").val(data.CVillage);
                            $("#cpostplace").val(data.CPostPlace);
                            $("#ctaluk").val(data.CTaluk);
                            $("#cCity").val(data.CCity);
                            $("#cdistrict").val(data.CDistrict);
                            $("#cpincode").val(data.Cpincode);
                            $("#ccountry").val(data.CCountry);
                            $("#txtPdoor").val(data.PDoorDetails);
                            //$("#txtpStreet").val(data.);
                            $("#txtpcity").val(data.PCity);
                            $("#ddlpcountry").val(data.PCountry);
                            $("#txtpdistrict").val(data.PDistrict);
                            $("#txtppincode").val(data.PPincode);
                            $("#txtpPostPlace").val(data.PPostPlace);
                            $("#txtpStreet").val(data.PStreet);
                            $("#ptaluk").val(data.PTaluk);
                            $("#txtpvillage").val(data.PVillage);
                
                        },error:function (error) 
                        {
                            alert('No data found ...!');
                        }
                    });
                }
                GetAddress();
            });
            
           

            // Edit Address ...
            $("#btnEditStuAddress").on("click", function ()
            {
                var isValid = true;
                if ($('#nav-tab2-4').parsley().validate() !== true) isValid = false;
                if (!isValid) {
                    //gritter-info,danger,success,warning,default
                    myAlert('Something went wrong ! Please check your inputs !', 'gritter-warning', '');
                    return false;
                }
                var cDoor=$("#txtcDoor").val();
                var cStreet=$("#cStreet").val();
                var cVillage=$("#cVillage").val();
                var cpostplace=$("#cpostplace").val();
                var ctaluk=$("#ctaluk").val();
                var cCity=$("#cCity").val();
                var cdistrict=$("#cdistrict").val();
                var cpincode=$("#cpincode").val();
                var ccountry=$("#ccountry").val();
                var Pdoor=$("#txtPdoor").val();
                var pStreet=$("#txtpStreet").val();
                var pvillage=$("#txtpvillage").val();
                var pPostPlace=$("#txtpPostPlace").val();
                var ptaluk=$("#ptaluk").val();
                var pcity=$("#txtpcity").val();
                var pdistrict=$("#txtpdistrict").val();
                var ppincode=$("#txtppincode").val();
                var ddlpcountry=$("#ddlpcountry").val();
                var JsonData;
                if ($('#chAddress').is(':checked'))
                {
                    JsonData = '{"CDoorDetail":"' + cDoor + '","CStreet":"' + cStreet + '","CVillage":"' + cVillage + '","CPostPlace":"' + cpostplace + '","CTaluk":"' + ctaluk + '","CCity":"' + cCity + '","CDistrict":"' + cdistrict + '","Cpincode":"' + cpincode + '","CCountry":"' + ccountry + '","PDoorDetails":"' + cDoor + '","PStreet":"' + cStreet + '","PVillage":"' + cVillage + '","PPostPlace":"' + cpostplace + '","PTaluk":"' + ctaluk + '","PCity":"' + cCity + '","PDistrict":"' + cdistrict + '","PPincode":"' + cpincode + '","PCountry":"' + ccountry + '"}';
                } else {
                    JsonData = '{"CDoorDetail":"' + cDoor + '","CStreet":"' + cStreet + '","CVillage":"' + cVillage + '","CPostPlace":"' + cpostplace + '","CTaluk":"' + ctaluk + '","CCity":"' + cCity + '","CDistrict":"' + cdistrict + '","Cpincode":"' + cpincode + '","CCountry":"' + ccountry + '","PDoorDetails":"' + Pdoor + '","PStreet":"' + pStreet + '","PVillage":"' + pvillage + '","PPostPlace":"' + pPostPlace + '","PTaluk":"' + ptaluk + '","PCity":"' + pcity + '","PDistrict":"' + pdistrict + '","PPincode":"' + ppincode + '","PCountry":"' + ddlpcountry + '"}';
                }
                $.ajax({
                    url:"@Url.Action("UpdateAddress", "Student")",
                    method:"POST",
                    datatype:"html",
                    data: { JsonAddress: JsonData },
                    success:function(data)
                    {
                        if (data == "200")
                            myAlert('Record(s) saved successfully ...!', 'gritter-success', '');
                        else if (data == "406")
                            myAlert('Failed to save Record(s) ...!', 'gritter-warning', '');
                    },error:function(error)
                    {
                        alert('Internal Server Error ...!');
                    }
                });
            });
            $('#chAddress').on('click', function ()
            {
                $('#dvPermenentAddress').toggle();
            })
        </script>
    </div>
}
