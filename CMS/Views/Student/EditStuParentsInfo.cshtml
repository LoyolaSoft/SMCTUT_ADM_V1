@model CMS.ViewModel.Model.StuParentsInfo



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="col-lg-6"><h4>Father Details</h4><hr /></div>
        <div class="col-lg-6"><h4>Mother Details</h4><hr /></div>
        <div class="col-md-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FATHER_NAME, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FATHER_NAME, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Father Name", id = "txtfName", @data_parsley_required = "true", @data_parsley_length = "[3,50]" } })
                    @Html.ValidationMessageFor(model => model.FATHER_NAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FDATEOFBIRTH, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <div class="input-group date" id="datetimepicker1">
                        @Html.EditorFor(model => model.FDATEOFBIRTH, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Select Date", id = "fdob" } })
                        @Html.ValidationMessageFor(model => model.FDATEOFBIRTH, "", new { @class = "text-danger" })
                        <span class="input-group-addon bg-purple"><i class="fa fa-calendar"></i></span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FR_OCCUPATION, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.FR_OCCUPATION, Model.FR_OCCUPATION, "-- Select --", new { @class = "drop-down form-control input-sm", id = "foccupation" })
                    @Html.ValidationMessageFor(model => model.FR_OCCUPATION, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FR_EDUCATION, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.FR_EDUCATION, Model.FR_EDUCATION, "-- Select --", new { @class = "drop-down form-control input-sm", id = "feducation" })
                    @Html.ValidationMessageFor(model => model.FR_EDUCATION, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FR_NATIONALITY, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.FR_NATIONALITY, Model.FR_NATIONALITY, "-- Select --", new { @class = "drop-down form-control input-sm", id = "fnationality" })
                    @Html.ValidationMessageFor(model => model.FR_NATIONALITY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FR_BUSINESS_PHONE, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FR_BUSINESS_PHONE, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Office Contact Number", id = "fbussinessno", @data_parsley_type = "number", @data_parsley_length = "[9,15]" } })
                    @Html.ValidationMessageFor(model => model.FR_BUSINESS_PHONE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FR_MOBILE, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FR_MOBILE, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Contact Number", id = "fmobile", @data_parsley_type = "number", @data_parsley_length = "[9,15]" } })
                    @Html.ValidationMessageFor(model => model.FR_MOBILE, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.FR_PASSPORT_NUMBER, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FR_PASSPORT_NUMBER, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Passport", id = "fpassport" } })
                        @Html.ValidationMessageFor(model => model.FR_PASSPORT_NUMBER, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.FR_INCOME, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FR_INCOME, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Father Income", id = "fIncome", @data_parsley_type = "number", @data_parsley_length = "[3,7]" } })
                    @Html.ValidationMessageFor(model => model.FR_INCOME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FRDATEOFEXPIRY, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <div class="input-group date" id="datetimepicker1">
                        @Html.EditorFor(model => model.FRDATEOFEXPIRY, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Select Date", id = "fdofexpiry" } })
                        @Html.ValidationMessageFor(model => model.FRDATEOFEXPIRY, "", new { @class = "text-danger" })
                        <span class="input-group-addon bg-purple"><i class="fa fa-calendar"></i></span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FR_EMAIL, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FR_EMAIL, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Father E-mail", id = "femail", @data_parsley_type = "email", @data_parsley_length = "[5,20]" } })
                    @Html.ValidationMessageFor(model => model.FR_EMAIL, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.FATHER_PHOTO, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FATHER_PHOTO, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Select Father Photo", id = "fphoto" } })
                    @Html.ValidationMessageFor(model => model.FATHER_PHOTO, "", new { @class = "text-danger" })
                </div>
            </div>*@
        </div>

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.MOTHER_NAME, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.MOTHER_NAME, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Mother Name", id = "mName", @data_parsley_length = "[3,50]" } })
                    @Html.ValidationMessageFor(model => model.MOTHER_NAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MDATEOFBIRTH, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <div class="input-group date" id="datetimepicker1">
                        @Html.EditorFor(model => model.MDATEOFBIRTH, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Select Date", id = "mDOB" } })
                        @Html.ValidationMessageFor(model => model.MDATEOFBIRTH, "", new { @class = "text-danger" })
                        <span class="input-group-addon bg-purple"><i class="fa fa-calendar"></i></span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MO_OCCUPATION, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.MO_OCCUPATION, Model.MO_OCCUPATION, "-- Select --", new { @class = "drop-down form-control input-sm", id = "mOccupation" })
                    @Html.ValidationMessageFor(model => model.MO_OCCUPATION, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MO_EDUCATION, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.MO_EDUCATION, Model.MO_EDUCATION, "-- Select --", new { @class = "drop-down form-control input-sm", id = "MEducation" })
                    @Html.ValidationMessageFor(model => model.MO_EDUCATION, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MO_NATIONALITY, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.MO_NATIONALITY, Model.MO_NATIONALITY, "-- Select --", new { @class = "form-control input-sm", id = "mNationality" })
                    @Html.ValidationMessageFor(model => model.MO_NATIONALITY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MO_BUSINESS_PHONE, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.MO_BUSINESS_PHONE, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Office Contact Nummber", id = "mBussinessNo", @data_parsley_type = "number", @data_parsley_length = "[9,15]" } })
                    @Html.ValidationMessageFor(model => model.MO_BUSINESS_PHONE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MO_MOBILE, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.MO_MOBILE, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Mother Contact Details", id = "MMobile", @data_parsley_type = "number", @data_parsley_length = "[9,15]" } })
                    @Html.ValidationMessageFor(model => model.MO_MOBILE, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.MO_PASSPORT_NUMBER, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MO_PASSPORT_NUMBER, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Select Date", id = "Mpassport" } })
                        @Html.ValidationMessageFor(model => model.MO_PASSPORT_NUMBER, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.MO_INCOME, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.MO_INCOME, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Mother Income", id = "MIncome", @data_parsley_type = "number", @data_parsley_length = "[3,7]" } })
                    @Html.ValidationMessageFor(model => model.MO_INCOME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MODATEOFEXPIRY, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <div class="input-group date" id="datetimepicker1">
                        @Html.EditorFor(model => model.MODATEOFEXPIRY, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Select Date", id = "MDOFExpiry" } })
                        @Html.ValidationMessageFor(model => model.MODATEOFEXPIRY, "", new { @class = "text-danger" })
                        <span class="input-group-addon bg-purple"><i class="fa fa-calendar"></i></span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MO_EMAIL, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.MO_EMAIL, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Mother E-mail", id = "MEmail", @data_parsley_type = "email", @data_parsley_length = "[5,20]" } })
                    @Html.ValidationMessageFor(model => model.MO_EMAIL, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.MOTHER_PHOTO, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.MOTHER_PHOTO, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Choose Photo", id = "MPhoto" } })
                    @Html.ValidationMessageFor(model => model.MOTHER_PHOTO, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group pull-right">
                <div class="col-md-12 pull-right">
                    <a class="btn btn-primary" id="EditStuParents">Update</a>
                </div>
            </div>
        </div>

        <script>
            $(document).ready(function ()
            {
                $(document).ready(function () {
                    handleDatepicker = function ()
                    {
                        "use strict";
                        $("#fdob,#fdofexpiry,#mDOB,#MDOFExpiry").datepicker
                       ({
                            todayHighlight: true,
                            autoclose: true,
                            endDate: new Date(),
                            format: "dd/mm/yyyy",
                            orientation: "right bottom"
                        })
                    }
                    handleDatepicker();
                });

                // FetchParents
                GetParents=function () 
                {
                    $.ajax({
                        url:"@Url.Action("FetchParentsDetails", "Student")",
                        method:"POST",
                        datatype:"html",
                        success:function (data) 
                        {
                            $("#txtfName").val(data.FatherName);
                            $("#fdob").val(data.FDateOfBirth);
                            $("#foccupation").val(data.FOccupation);
                            $("#feducation").val(data.FEducation);
                            $("#fnationality").val(data.FNationality);
                            $("#fbussinessno").val(data.fBusinessContact);
                            $("#fmobile").val(data.FMobile);
                            $("#fpassport").val(data.FPassport);
                            $("#fIncome").val(data.FIncome);
                            $("#fdofexpiry").val(data.FDateOfExpire);
                            $("#femail").val(data.FEmail);
                            $("#mName").val(data.MotherName);
                            $("#mDOB").val(data.MDateOfBirth);
                            $("#mOccupation").val(data.MOccupation);
                            $("#MEducation").val(data.MEducation);
                            $("#mNationality").val(data.MNationality);
                            $("#mBussinessNo").val(data.mBusinessContact);
                            $("#MMobile").val(data.MMobile);
                            $("#Mpassport").val(data.MPassport);
                            $("#MIncome").val(data.MIncome);
                            $("#MDOFExpiry").val(data.MDateOfExpire);
                            $("#MEmail").val(data.MEmail);
                        },error:function(error)
                        {
                            alert('No data found...!');
                        }
                    });
                }
                GetParents();
            });

            
            // Parents Details
            $("#EditStuParents").on("click",function()
            {
                var isValid = true;
                if ($('#nav-tab2-3').parsley().validate() !== true) isValid = false;
                if (!isValid) {
                    //gritter-info,danger,success,warning,default
                    myAlert('Something went wrong ! Please check your inputs !', 'gritter-warning', '');
                    return false;
                }
                var FatherName = $("#txtfName").val();
                var FDOB = $("#fdob").val();
                var FOccupation = $("#foccupation").val();
                var FEducation = $("#feducation").val();
                var FNationality = $("#fnationality").val();
                var FBusinessPhone = $("#fbussinessno").val();
                var FMobile = $("#fmobile").val();
                var FPassportNo = $("#fpassport").val();
                var FIncome = $("#fIncome").val();
                var FDOExpiry = $("#fdofexpiry").val();
                var FEmail = $("#femail").val();
                var MName = $("#mName").val();
                var MDOB = $("#mDOB").val();
                var MOccupation = $("#mOccupation").val();
                var MEducation = $("#MEducation").val();
                var MNationality = $("#mNationality").val();
                var MBusinessPhone = $("#mBussinessNo").val();
                var MPhone = $("#MMobile").val();
                var MPassportNo = $("#Mpassport").val();
                var MIncome = $("#MIncome").val();
                var MDOExpiry = $("#MDOFExpiry").val();
                var MEmail = $("#MEmail").val();
                //var MPhoto = $("#MOTHER_PHOTO").val();
                //var FPhoto = $("#FATHER_PHOTO").val();
                var JsonData;
                if (JsonData==null)
                {
                    JsonData = '{"FatherName":"' + FatherName + '","FDateOfBirth":"' + FDOB + '","MotherName":"' + MName + '","MDateOfBirth":"' + MDOB + '","fBusinessContact":"' + FBusinessPhone + '","FMobile":"' + FMobile + '","FPassport":"' + FPassportNo + '","mBusinessContact":"' + MBusinessPhone + '","MMobile":"' + MPhone + '","MPassport":"' + MPassportNo + '","FIncome":"' + FIncome + '","MIncome":"' + MIncome + '","FDateOfExpire":"' + FDOExpiry + '","MDateOfExpire":"' + MDOExpiry + '","FEmail":"' + FEmail + '","MEmail":"' + MEmail + '","FOccupation":"' + FOccupation + '","MOccupation":"' + MOccupation + '","FEducation":"' + FEducation + '","MEducation":"' + MEducation + '","FNationality":"' + FNationality + '","MNationality":"' + MNationality + '"}';
                }
        
                $.ajax({
                    url:"@Url.Action("UpdateParentInfo", "Student")",
                    method:"POST",
                    datatype:"html",
                    data:{JsonParents:JsonData},
                    success:function(data)
                    {
                        alert(data);
                    },error:function(error)
                    {
                        alert('Your record not saved try again');
                    }
                });
            });
        </script>
    </div>
}
