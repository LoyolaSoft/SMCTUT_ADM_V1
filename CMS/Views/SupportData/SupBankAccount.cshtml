@model CMS.ViewModel.ViewModel.SupBankAccount
    @using CMS.Utility;
@{
    ViewBag.Title = "SupBankAccount";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content" id="content">
        <ol class="breadcrumb pull-right">
            <li><a href="javascript:;">Home</a></li>
            <li><a href="@Url.Action("ListSupBankAccount","SupportData")">List Bank Account</a></li>
            <li class="active">Add Bank Account</li>
        </ol>
        <h1 class="page-header">Add Bank Account</h1>
        <div class="panel">
            <div class="panel-heading bg-primary">
                <div class="panel-heading-btn">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-danger" data-click="panel-remove"><i class="fa fa-times"></i></a>
                </div>
                <h4 class="panel-title">Add Bank Account</h4>
            </div>
            <div class="panel-body">
                <div class="form-horizontal">
                    <div class="col-md-12">
                        <div class="col-md-6 col-md-offset-3">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group hidden">
                                @Html.LabelFor(model => model.BankAccount.BANK_ACCOUNT_ID, "Bank Id", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.BankAccount.BANK_ACCOUNT_ID, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Academic Name" } })
                                    @Html.ValidationMessageFor(model => model.BankAccount.BANK_ACCOUNT_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group hidden">
                                @Html.LabelFor(model => model.BankAccount.BANK, "Bank Id", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.BankAccount.BANK, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Academic Name" } })
                                    @Html.ValidationMessageFor(model => model.BankAccount.BANK, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BankList, "Bank Name", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.BankList,Model.BankList, "--select--", new { @class = "drop-down form-control  input-sm" })
                                    @Html.ValidationMessageFor(model => model.BankList, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BankAccount.PASSBOOK_NO, "Passbook No", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.BankAccount.PASSBOOK_NO, new { htmlAttributes = new { @class = "form-control input-sm", type="number", placeholder = "Enter Pass Book No" } })
                                    @Html.ValidationMessageFor(model => model.BankAccount.PASSBOOK_NO, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BankAccount.ACCOUNT_PURPOSE, "Purpose", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.BankAccount.ACCOUNT_PURPOSE, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Purpose" } })
                                    @Html.ValidationMessageFor(model => model.BankAccount.ACCOUNT_PURPOSE, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BankAccount.STARTED_DATE, "Started Date", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    <div class="input-group date" id="datetimepicker1">
                                        @Html.EditorFor(model => model.BankAccount.STARTED_DATE, new { htmlAttributes = new { @class = "form-control input-sm", id = "StartedDate", placeholder = "Pick Starting Date" } })
                                        @Html.ValidationMessageFor(model => model.BankAccount.STARTED_DATE, "", new { @class = "text-danger" })
                                        <span class="input-group-addon bg-purple"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BankAccount.CLOSED_DATE, "Close Date", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    <div class="input-group date" id="datetimepicker1">
                                        @Html.EditorFor(model => model.BankAccount.CLOSED_DATE, new { htmlAttributes = new { @class = "form-control input-sm", id = "EndDate", placeholder = "Pick Ending Date" } })
                                        @Html.ValidationMessageFor(model => model.BankAccount.CLOSED_DATE, "", new { @class = "text-danger" })
                                        <span class="input-group-addon bg-purple"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group pull-right ">
                                <div class="col-md-12">
                                    <a id="btnSubmit" value="SUBMIT" class="btn btn-primary">Submit</a>
                                    <a id="" href="@Url.Action("ListSupBankAccount","SupportData")" value="SUBMIT" class="btn btn-danger">Cancel</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section scripts{
<script src="~/Content/assets/plugins/flot/jquery.flot.min.js"></script>
<script src="~/Content/assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>
<script>
        $(document).ready(function () {
            handleDatepicker = function () {
                "use strict";
                $("#StartedDate,#EndDate").datepicker({
                    todayHighlight: !0,
                    autoclose: !0,
                    format: "dd/mm/yyyy",
                    orientation: "right bottom"
                    // 'top': top,
                    // 'left': left
                }
                )
            }
            LoadSelectedValue = function () {
                var BankId = $('#BankAccount_BANK').val();
                if (BankId != 0) {
                    $('#BankList').val(BankId);
                }
            }
            LoadSelectedValue();
            handleDatepicker();
        });

</script>
    <script>
        $('#btnSubmit').on('click', function () {
            var AccountId = $('#BankAccount_BANK_ACCOUNT_ID').val();
            var BankId = $('#BankList').val();
            var Purpose = $("#BankAccount_ACCOUNT_PURPOSE").val();
            var PassbookNo = $("#BankAccount_PASSBOOK_NO").val();
            var StartDate = $("#StartedDate").val();
            var EndDate = $("#EndDate").val();
            if (Date.parse(StartDate) > Date.parse(EndDate)) {
                alert('Date Range is wrong...!!!');
                return false;
            }
            if (BankId != 0) {
                var JsonData;
                if (JsonData == null) {
                    JsonData = '{"BANK_ACCOUNT_ID":"' + AccountId + '","BANK":"' + BankId + '","PASSBOOK_NO":"' + PassbookNo + '","ACCOUNT_PURPOSE":"' + Purpose + '","STARTED_DATE":"' + StartDate + '","CLOSED_DATE":"' + EndDate + '"}';
                }
                alert(JsonData);
               $.ajax({
                url: "@Url.Action("SaveOrUpdateSupBankAccount", "SupportData")",
                method: "POST",
                datatype: "html",
                data: { sBankAccount: JsonData },
                success: function (objResult) {
                    alert(objResult.Message);
                }, error: function (error) {
                    alert('Record not saved try again ..!');
                }
            });
            }
            else {
                alert('Please Select Bank...!!!');
            }
        });
    </script>
    }

