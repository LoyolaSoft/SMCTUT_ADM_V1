@model CMS.ViewModel.ViewModel.TimeTableViewModel
@using CMS.Utility;
@{
    ViewBag.Title = "EditTimeTableSetting";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="content" id="content">
        <ol class="breadcrumb pull-right">
            <li><a href="javascript:;">Home</a></li>
            <li><a href="@Url.Action("TimeTableSettingList","TimeTable")">List TimeTable Settings </a></li>
            <li class="active">Edit TimeTable Settings </li>
        </ol>
        <h1 class="page-header">TimeTable Settings </h1>
        <div class="panel">
            <div class="panel-heading bg-primary">
                <div class="panel-heading-btn">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-danger" data-click="panel-remove"><i class="fa fa-times"></i></a>
                </div>
                <h4 class="panel-title">Edit TimeTable Settings</h4>
            </div>
            <div class="panel-body">
                <div class="form-horizontal">
                    <div class="col-md-12">
                        <div class="col-md-6 col-md-offset-3">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.TimeTableSetting.SETTING_NAME, "Setting Name", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.TimeTableSetting.SETTING_NAME, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Enter Setting Name" } })
                                    @Html.ValidationMessageFor(model => model.TimeTableSetting.SETTING_NAME, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.HourList, "No Of Hours", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.HourList, Model.HourList, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.HourList, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DayOrderList, "No Of Days", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.DayOrderList, Model.DayOrderList, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.DayOrderList, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TimeTableSetting.BASIC_HOURS_FOR_HOD, "Hours For HOD", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.TimeTableSetting.BASIC_HOURS_FOR_HOD, new { htmlAttributes = new { @class = "form-control input-sm", Type = "Number", placeholder = "Enter Hours For HOD" } })
                                    @Html.ValidationMessageFor(model => model.TimeTableSetting.BASIC_HOURS_FOR_HOD, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.TimeTableSetting.BASIC_HOURS_FOR_STAFF, "Hours For Staff", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.TimeTableSetting.BASIC_HOURS_FOR_STAFF, new { htmlAttributes = new { @class = "form-control input-sm", Type = "Number", placeholder = "Enter Hours For Staff" } })
                                    @Html.ValidationMessageFor(model => model.TimeTableSetting.BASIC_HOURS_FOR_STAFF, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.SemesterList, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.SemesterList, Model.SemesterList, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.SemesterList, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.TimeTableSetting.ACADEMIC_YEAR, "Academic Year", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.TimeTableSetting.ACADEMIC_YEAR, new { htmlAttributes = new { @class = "form-control input-sm", Type = "Number", placeholder = "Enter Academic Year" } })
                                    @Html.ValidationMessageFor(model => model.TimeTableSetting.ACADEMIC_YEAR, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.GraduationType, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.GraduationType, Model.GraduationType, "-- Select --", new { @class = "drop-down form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.GraduationType, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Allow Staic Hours", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.CheckBox("ALLOW_STATIC_HOUR", new { @class = "input-sm" })

                                </div>
                            </div>
                            <div class="form-group pull-right ">
                                <div class="col-md-12">
                                    <a id="btnSubmit" value="SUBMIT" class="btn btn-primary">Submit</a>
                                    <a id="" href="@Url.Action("TimeTableSettingList","TimeTable")" value="SUBMIT" class="btn btn-danger">Cancel</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section scripts{
<script>
        $(document).ready(function () {
            var ID=@Session[Common.SESSION_VARIABLES.SETTING_ID].ToString();
            $.ajax({
                url:"@Url.Action("FetchTimeTableSettingById", "TimeTable")",
                method: "POST",
                datatype: "html",
                data: { sSettingId: ID },
                success: function (data) {
                    $("#TimeTableSetting_SETTING_NAME").val(data[0].SETTING_NAME);
                    $("#HourList").val(data[0].NO_OF_HOURS);
                    $("#DayOrderList").val(data[0].NO_OF_DAYS);
                    $('#TimeTableSetting_BASIC_HOURS_FOR_HOD').append(data[0].BASIC_HOURS_FOR_HOD).trigger('change');
                    $("#TimeTableSetting_BASIC_HOURS_FOR_STAFF").val(data[0].BASIC_HOURS_FOR_STAFF);
                    $("#SemesterList").val(data[0].SEMESTER_TYPE);
                    $("#TimeTableSetting_ACADEMIC_YEAR").val(data[0].ACADEMIC_YEAR);
                    $("#GraduationType").val(data[0].GRADUATION_TYPE);
                    $("#ALLOW_STATIC_HOUR").val(data[0].ALLOW_STATIC_HOUR);
                    if ($("#ALLOW_STATIC_HOUR").val()==1) {
                        $("#ALLOW_STATIC_HOUR").prop( "checked", true );
                    }
                    else {
                        $("#ALLOW_STATIC_HOUR").prop( "checked", false );
                    }
                }, error: function (error) {
                    alert('No Data Found');
                }
            });
        });
</script>
    <script>
        $('#btnSubmit').on('click', function () {
            var SettingName = $("#TimeTableSetting_SETTING_NAME").val();
            var NoOFHours = $("#HourList").val();
            var NoOfDays = $("#DayOrderList").val();
            var HoursForHOD = $("#TimeTableSetting_BASIC_HOURS_FOR_HOD").val();
            var HoursForStaff = $("#TimeTableSetting_BASIC_HOURS_FOR_STAFF").val();
            var Semester = $("#SemesterList").val();
            var AcademicYear = $("#TimeTableSetting_ACADEMIC_YEAR").val();
            var GraducatinType = $("#GraduationType").val();
            if ($('#ALLOW_STATIC_HOUR').is(":checked")) {
                var AllowStaticHours = "1";
            }
            else {
                var AllowStaticHours = "0";
            }
            //var AllowStaticHours = Number(Boolean($('#ALLOW_STATIC_HOUR').val()));
            var JsonData;
            if (JsonData == null) {
                JsonData = '{"SETTING_NAME":"' + SettingName + '","NO_OF_HOURS":"' + NoOFHours + '","NO_OF_DAYS":"' + NoOfDays + '","BASIC_HOURS_FOR_HOD":"' + HoursForHOD + '","BASIC_HOURS_FOR_STAFF":"' + HoursForStaff + '","SEMESTER_TYPE":"' + Semester + '","ACADEMIC_YEAR":"' + AcademicYear + '","GRADUATION_TYPE":"' + GraducatinType + '","ALLOW_STATIC_HOUR":"' + AllowStaticHours + '"}';
            }
            if (SettingName != null && NoOFHours != 0 && NoOfDays != 0 && HoursForHOD != null && Semester != 0 && AcademicYear != null && GraducatinType != 0) {
                if (HoursForHOD.length < 3 && HoursForHOD.length < 3 && AcademicYear.length<5) {
                        alert(JsonData);
                        $.ajax({
                            url: "@Url.Action("UpdateTimeTableSetting", "TimeTable")",
                            method: "POST",
                            datatype: "html",
                            data: { TimeTableSetting: JsonData },
                            success: function (data) {
                                alert(data);
                            }, error: function (error) {
                                alert('Record not saved try again ..!');
                            }
                        });
                }
                else {
                    alert('Records Out Of Range..!!!');
                }
            }
            else {
                alert('Enter correct values...!!!');
            }
        });
</script>
    }
